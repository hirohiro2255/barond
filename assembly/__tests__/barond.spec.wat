(module
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $none_=>_none (func))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_i32_=>_i64 (func (param i32 i32) (result i64)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_i64_=>_i32 (func (param i32 i64) (result i32)))
 (type $i32_i32_i64_=>_i64 (func (param i32 i32 i64) (result i64)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $i32_i64_i32_=>_i64 (func (param i32 i64 i32) (result i64)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i32_i32_i64_=>_none (func (param i32 i32 i64)))
 (type $i64_i32_=>_i32 (func (param i64 i32) (result i32)))
 (type $i32_i32_i32_=>_i64 (func (param i32 i32 i32) (result i64)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i32_i32_i64_=>_i64 (func (param i32 i32 i32 i64) (result i64)))
 (type $i32_i64_=>_none (func (param i32 i64)))
 (type $i64_=>_i32 (func (param i64) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i64_=>_none (func (param i64)))
 (type $i64_i32_=>_none (func (param i64 i32)))
 (type $i32_i64_i32_=>_none (func (param i32 i64 i32)))
 (type $i32_i32_i32_i32_f64_=>_i32 (func (param i32 i32 i32 i32 f64) (result i32)))
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "__aspect" "createReflectedLong" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedLong (param i32 i32 i32 i32 i32 i32) (result i32)))
 (import "__aspect" "attachStackTraceToReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue (param i32)))
 (import "__aspect" "reportActualReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue (param i32)))
 (import "__aspect" "reportExpectedReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue (param i32 i32)))
 (import "__aspect" "clearActual" (func $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual))
 (import "__aspect" "clearExpected" (func $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected))
 (import "__aspect" "reportTestTypeNode" (func $node_modules/@as-pect/assembly/assembly/internal/Test/it (param i32 i32)))
 (import "__aspect" "createReflectedNumber" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedNumber (param i32 i32 i32 i32 f64) (result i32)))
 (import "__aspect" "createReflectedValue" (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue (param i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32) (result i32)))
 (import "__aspect" "reportGroupTypeNode" (func $node_modules/@as-pect/assembly/assembly/internal/Test/describe (param i32 i32)))
 (global $assembly/barond/ONE i64 (i64.const 1))
 (global $assembly/barond/BISHOP_MAGIC_NUMBERS i32 (i32.const 576))
 (global $assembly/barond/ROOK_MAGIC_NUMBERS i32 (i32.const 1168))
 (global $assembly/barond/BISHOP_RELEVANT_BITS i32 (i32.const 1760))
 (global $assembly/barond/ROOK_RELEVANT_BITS i32 (i32.const 2352))
 (global $assembly/barond/SQ_TO_COORD i32 (i32.const 4736))
 (global $assembly/barond/NOT_A_FILE i64 (i64.const -72340172838076674))
 (global $assembly/barond/NOT_H_FILE i64 (i64.const 9187201950435737471))
 (global $assembly/barond/NOT_HG_FILE i64 (i64.const 4557430888798830399))
 (global $assembly/barond/NOT_AB_FILE i64 (i64.const -217020518514230020))
 (global $assembly/barond/state (mut i32) (i32.const 1804289383))
 (global $~lib/shared/runtime/Runtime.Stub i32 (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Minimal i32 (i32.const 1))
 (global $~lib/shared/runtime/Runtime.Incremental i32 (i32.const 2))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/native/ASC_LOW_MEMORY_LIMIT i32 (i32.const 0))
 (global $~lib/native/ASC_RUNTIME i32 (i32.const 2))
 (global $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.FAILED_MATCH i32 (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH i32 (i32.const 1))
 (global $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.DEFER_MATCH i32 (i32.const 2))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/native/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $node_modules/@as-pect/assembly/assembly/internal/noOp/noOp i32 (i32.const 14288))
 (global $node_modules/@as-pect/assembly/assembly/internal/log/ignoreLogs (mut i32) (i32.const 0))
 (global $~lib/rt/__rtti_base i32 (i32.const 14432))
 (global $~lib/memory/__data_end i32 (i32.const 14548))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 30932))
 (global $~lib/memory/__heap_base i32 (i32.const 30932))
 (global $~started (mut i32) (i32.const 0))
 (memory $0 1)
 (data (i32.const 12) "\1c\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\84@@D\08\04@\00\08B\00\8a \04 \00\02\02\08A\00\19\10\00\10 \04E\08\06\08\01\10\02\80\80A\10\81\05\10\00 F\04\08\12!\10\02\06 \08\82\80\10\00\02\"\10\84\80\c0\03\04\04D\04\04\05\04\00\88\00B\01\10\02\00\00\02!\08\01\08\08\d0$\00\04\02\n\n\02\01\00\02\04 \08\03\04\00\00\00\08\10\02\10\01\04\00\05@\10\04AH\01\04\00\02\02\02\04\01\01\08\00\01\88\c3\10\02@\00\00\82\10$ \02\04\04\02A \00\82\01\10\08\03 \a0\01(\00\04\00\00\04\08 \08\04\85\00\00\04\88\08\c8\02\01\81\00H\88\10\04\90\0e\00\02\01\84\80\04\02\02\80\01\02\te\08  \02\02\12\02\02\n\10\10 \01$\02\08\84\04R\01\10\11\08\02\00\08 \00\00@\00!\10\00\01@\02\10\01\n@@\00\80\02\10\01\81@\00\e4\00\80 \01\01@\00\1c\00 \02\a0b\t \04\80\02\02P\08\02\10\"\84\08\0c0\00\"@\00 \80\00\08\80\00\02F\86\08\08\10\00\02\n\02\80\00\10\11\80H\00\10 \00\14\01\80\a0\000b\02\92 @\03\8c\00B\00\10\00@\82\18\t\02\00\18\00\84\a8\08\04@\00\04\08\a6\00\04\11\00\00\08\02D\n\06@\18A\00\00\04\01\08\90\00\01\81\80\00\10\01\01\02\80\f0\04\05\08\08\"\1a\12\12!\00\06\02\12\80\00\00$\11\10\86\00\05\00\08 \08a\80\80\01D\00\04\01\0e\02\00@\n\00D\10&\00\000\02\00\02\02\11$\02\08\01\00!a`\90 \00\10\03\01\04\10\84\84Z\04\1c\01\01\08\01\04\00\00\"P\t\01\01\n\00\00 \01\02J\00\00\00(\b0\98\00\01\01\02P\00\t\04\11(\00@\80\04\02\02\10\00\00(\00@\02-  \00\00\06\00\"\08BH\84\18\89 \00\02)\10\01\10@\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 556) ",\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\10\00\00\00 \00\00\00 \00\00\00\00\02\00\00@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 604) "\1c\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00 \00\80\00@\10\80\8a@\00\10\00 \00@\01\01p\01\a0\80\18\80\02 \04\00\01\10\08\00\01 \04\08\10\00\02\00\02\08\00\01\02\00\1c\00\03\00\01\00\02\80\00\80\84\00)@\04\80\08\80 \00@ \98\00\80\00\00@\00 \00\10@$ \00\10\80\00 \80\00\01\00\10\80\00\08\80 \01\00\04\00\88\80\80\08\02\00\04\80\00\"\80\02\00\80\00\02\00\01\80\00\"\00\11\82`\00\00\01\08\00 B\06@\04\80\00\00@\00 \80\80\00\01\00B \10\00\8a\10\12\02\08\00\10\80\84@\01\00(\00\14\80\82\81\04\00A\00\02@\00\94\80\02\08\01\10\00\04\10@\04a\80\08\00\02\00\00\00\80 \80\00@\00\01\00\10\08 !\00@ \81\00\10\80\06 !\00\80\00\08\80\00\10 \00\10\04 \00\n\00\02\00\00\04\80\80\00\02\00\00\02\01\10\00\84\08\80\00\81(\04\00F\00\80\00 \00\80@\80\00@@\01\08 \000\00@\04\00E\00\11\00 \04\00\00\01\10\10\00\02\88\01\00(\80\01\04\80\14\00\00\02\80\80\00\04\80 \01\10\00\04\02\08$\01\84\04\00\02e\04\00\02 \80\08\80\00@\80\04\00@\03\10 B\00\10@\00\11\00\01 0\00\t\00\01!\00\10\00\00\04\00\11\00\01\08\02 \02\80\00\04\80\00\02\02\00\01\01\04\00\02 \00\01\00\82@\00DH \00\82@\00\"\00\01\01\80\10@\00 \80@\00\00\01A\04 \14\08@\00\02\12\c0 \08\06\02\00\01\08\04\10\00\01\00\80\00\04\80\00\02\0c\02\00$\020\08a5)\00\92\00A\00DD\00\01!\80@\10\00\80\02\85 \00@\00\19\00!\01 \10\00A\08\c0\80!\04\00\01\10\08$@rH$\a00\00\02\00\02DA\08\10\00\12\00\04\08\n\90\04a\00\02\02$\00\81@\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1148) ",\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\10\00\00\00p\02\00\00p\02\00\00\00\02\00\00@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1196) "\1ct\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\07\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\07\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t
 (data (i32.const 1740) ",\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\10\00\00\00\c0\04\00\00\c0\04\00\00\00\02\00\00@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1788) "\1c\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\0c\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0b\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2332) ",\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\10\00\00\00\10\07\00\00\10\07\00\00\00\02\00\00@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2380) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00a\008\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2412) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00b\008\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2444) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00c\008\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2476) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00d\008\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2508) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00e\008\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2540) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00f\008\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2572) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00g\008\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2604) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00h\008\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2636) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00a\007\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2668) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00b\007\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2700) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00c\007\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2732) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00d\007\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2764) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00e\007\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2796) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00f\007\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2828) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00g\007\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2860) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00h\007\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2892) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00a\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2924) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00b\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2956) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00c\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2988) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00d\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3020) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00e\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3052) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00f\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3084) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00g\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3116) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00h\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3148) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00a\005\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3180) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00b\005\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3212) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00c\005\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3244) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00d\005\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3276) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00e\005\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3308) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00f\005\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3340) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00g\005\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3372) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00h\005\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3404) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00a\004\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3436) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00b\004\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3468) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00c\004\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3500) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00d\004\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3532) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00e\004\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3564) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00f\004\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3596) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00g\004\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3628) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00h\004\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3660) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00a\003\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3692) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00b\003\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3724) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00c\003\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3756) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00d\003\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3788) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00e\003\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3820) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00f\003\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3852) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00g\003\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3884) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00h\003\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3916) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00a\002\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3948) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00b\002\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3980) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00c\002\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4012) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00d\002\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4044) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00e\002\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4076) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00f\002\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4108) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00g\002\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4140) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00h\002\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4172) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00a\001\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4204) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00b\001\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4236) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00c\001\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4268) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00d\001\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4300) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00e\001\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4332) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00f\001\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4364) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00g\001\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4396) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00h\001\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4428) "\1c\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00`\t\00\00\80\t\00\00\a0\t\00\00\c0\t\00\00\e0\t\00\00\00\n\00\00 \n\00\00@\n\00\00`\n\00\00\80\n\00\00\a0\n\00\00\c0\n\00\00\e0\n\00\00\00\0b\00\00 \0b\00\00@\0b\00\00`\0b\00\00\80\0b\00\00\a0\0b\00\00\c0\0b\00\00\e0\0b\00\00\00\0c\00\00 \0c\00\00@\0c\00\00`\0c\00\00\80\0c\00\00\a0\0c\00\00\c0\0c\00\00\e0\0c\00\00\00\r\00\00 \r\00\00@\r\00\00`\r\00\00\80\r\00\00\a0\r\00\00\c0\r\00\00\e0\r\00\00\00\0e\00\00 \0e\00\00@\0e\00\00`\0e\00\00\80\0e\00\00\a0\0e\00\00\c0\0e\00\00\e0\0e\00\00\00\0f\00\00 \0f\00\00@\0f\00\00`\0f\00\00\80\0f\00\00\a0\0f\00\00\c0\0f\00\00\e0\0f\00\00\00\10\00\00 \10\00\00@\10\00\00`\10\00\00\80\10\00\00\a0\10\00\00\c0\10\00\00\e0\10\00\00\00\11\00\00 \11\00\00@\11\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4716) ",\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\10\00\00\00`\11\00\00`\11\00\00\00\01\00\00@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4764) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00B\00a\00r\00o\00n\00d\00 \00c\00l\00a\00s\00s\00\00\00\00\00")
 (data (i32.const 4812) "\9c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\84\00\00\00g\00e\00t\00R\00o\00o\00k\00A\00t\00t\00a\00c\00k\00s\00 \00a\00n\00d\00 \00g\00e\00t\00B\00i\00s\00h\00o\00p\00A\00t\00t\00a\00c\00k\00s\00 \00w\00o\00r\00k\00 \00p\00r\00o\00p\00e\00r\00l\00y\00 \00w\00i\00t\00h\00 \00s\00o\00m\00e\00 \00b\00l\00o\00c\00k\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4972) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5036) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00")
 (data (i32.const 5084) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 5132) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00\00\00\00\00")
 (data (i32.const 5196) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5264) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5296) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5324) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5376) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5404) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5468) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5596) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5628) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5660) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00u\006\004\00\00\00\00\00\00\00")
 (data (i32.const 5692) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 5756) "\8c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00t\00\00\00n\00o\00d\00e\00_\00m\00o\00d\00u\00l\00e\00s\00/\00@\00a\00s\00-\00p\00e\00c\00t\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00a\00s\00s\00e\00m\00b\00l\00y\00/\00i\00n\00t\00e\00r\00n\00a\00l\00/\00a\00s\00s\00e\00r\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5900) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5932) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5964) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00:\00\00\00g\00e\00t\00R\00o\00o\00k\00A\00t\00t\00a\00c\00k\00s\00 \00w\00o\00r\00k\00s\00 \00p\00r\00o\00p\00e\00r\00l\00y\00\00\00")
 (data (i32.const 6044) "\1c\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\fe\01\01\01\01\01\01\01\fd\02\02\02\02\02\02\02\fb\04\04\04\04\04\04\04\f7\08\08\08\08\08\08\08\ef\10\10\10\10\10\10\10\df       \bf@@@@@@@\7f\80\80\80\80\80\80\80\01\fe\01\01\01\01\01\01\02\fd\02\02\02\02\02\02\04\fb\04\04\04\04\04\04\08\f7\08\08\08\08\08\08\10\ef\10\10\10\10\10\10 \df      @\bf@@@@@@\80\7f\80\80\80\80\80\80\01\01\fe\01\01\01\01\01\02\02\fd\02\02\02\02\02\04\04\fb\04\04\04\04\04\08\08\f7\08\08\08\08\08\10\10\ef\10\10\10\10\10  \df     @@\bf@@@@@\80\80\7f\80\80\80\80\80\01\01\01\fe\01\01\01\01\02\02\02\fd\02\02\02\02\04\04\04\fb\04\04\04\04\08\08\08\f7\08\08\08\08\10\10\10\ef\10\10\10\10   \df    @@@\bf@@@@\80\80\80\7f\80\80\80\80\01\01\01\01\fe\01\01\01\02\02\02\02\fd\02\02\02\04\04\04\04\fb\04\04\04\08\08\08\08\f7\08\08\08\10\10\10\10\ef\10\10\10    \df   @@@@\bf@@@\80\80\80\80\7f\80\80\80\01\01\01\01\01\fe\01\01\02\02\02\02\02\fd\02\02\04\04\04\04\04\fb\04\04\08\08\08\08\08\f7\08\08\10\10\10\10\10\ef\10\10     \df  @@@@@\bf@@\80\80\80\80\80\7f\80\80\01\01\01\01\01\01\fe\01\02\02\02\02\02\02\fd\02\04\04\04\04\04\04\fb\04\08\08\08\08\08\08\f7\08\10\10\10\10\10\10\ef\10      \df @@@@@@\bf@\80\80\80\80\80\80\7f\80\01\01\01\01\01\01\01\fe\02\02\02\02\02\02\02\fd\04\04\04\04\04\04\04\fb\08\08\08\08\08\08\08\f7\10\10\10\10\10\10\10\ef       \df@@@@@@@\bf\80\80\80\80\80\80\80\7f\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6588) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6620) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00>\00\00\00g\00e\00t\00B\00i\00s\00h\00o\00p\00A\00t\00t\00a\00c\00k\00s\00 \00w\00o\00r\00k\00s\00 \00p\00r\00o\00p\00e\00r\00l\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6716) "\1c\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\04\08\10 @\80\00\05\08\10 @\80\00\00\n\11 @\80\00\00\00\14\"A\80\00\00\00\00(D\82\01\00\00\00\00P\88\04\02\01\00\00\00\a0\10\08\04\02\01\00\00@ \10\08\04\02\01\02\00\02\04\08\10 @\05\00\05\08\10 @\80\n\00\n\11 @\80\00\14\00\14\"A\80\00\00(\00(D\82\01\00\00P\00P\88\04\02\01\00\a0\00\a0\10\08\04\02\01@\00@ \10\08\04\02\04\02\00\02\04\08\10 \08\05\00\05\08\10 @\11\n\00\n\11 @\80\"\14\00\14\"A\80\00D(\00(D\82\01\00\88P\00P\88\04\02\01\10\a0\00\a0\10\08\04\02 @\00@ \10\08\04\08\04\02\00\02\04\08\10\10\08\05\00\05\08\10  \11\n\00\n\11 @A\"\14\00\14\"A\80\82D(\00(D\82\01\04\88P\00P\88\04\02\08\10\a0\00\a0\10\08\04\10 @\00@ \10\08\10\08\04\02\00\02\04\08 \10\08\05\00\05\08\10@ \11\n\00\n\11 \80A\"\14\00\14\"A\01\82D(\00(D\82\02\04\88P\00P\88\04\04\08\10\a0\00\a0\10\08\08\10 @\00@ \10 \10\08\04\02\00\02\04@ \10\08\05\00\05\08\80@ \11\n\00\n\11\00\80A\"\14\00\14\"\00\01\82D(\00(D\01\02\04\88P\00P\88\02\04\08\10\a0\00\a0\10\04\08\10 @\00@ @ \10\08\04\02\00\02\80@ \10\08\05\00\05\00\80@ \11\n\00\n\00\00\80A\"\14\00\14\00\00\01\82D(\00(\00\01\02\04\88P\00P\01\02\04\08\10\a0\00\a0\02\04\08\10 @\00@\80@ \10\08\04\02\00\00\80@ \10\08\05\00\00\00\80@ \11\n\00\00\00\00\80A\"\14\00\00\00\00\01\82D(\00\00\00\01\02\04\88P\00\00\01\02\04\08\10\a0\00\01\02\04\08\10 @\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7260) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7292) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00<\00\00\00s\00e\00t\00O\00c\00c\00u\00p\00a\00n\00c\00y\00 \00w\00o\00r\00k\00s\00 \00a\00s\00 \00e\00x\00p\00e\00c\00t\00e\00d\00")
 (data (i32.const
 (data (i32.const 8204) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8236) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\000\00\00\00g\00e\00t\00L\00S\00B\00 \00w\00o\00r\00k\00s\00 \00a\00s\00 \00e\00x\00p\00e\00c\00t\00e\00d\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8316) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00i\003\002\00\00\00\00\00\00\00")
 (data (i32.const 8348) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00S\00t\00r\00i\00n\00g\00")
 (data (i32.const 8380) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00K\00e\00y\00 \00d\00o\00e\00s\00 \00n\00o\00t\00 \00e\00x\00i\00s\00t\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8444) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00~\00l\00i\00b\00/\00m\00a\00p\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 8492) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\004\00\00\00c\00a\00c\00h\00e\00L\00e\00n\00g\00t\00h\00 \00s\00h\00o\00u\00l\00d\00 \00b\00e\00 \00e\00v\00e\00n\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8572) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8604) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8636) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\002\00\00\00S\00e\00r\00i\00a\00l\00i\00z\00e\00s\00 \00t\00o\00 \00s\00a\00m\00e\00 \00v\00a\00l\00u\00e\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8716) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8748) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\006\00\00\00c\00o\00u\00n\00t\00B\00i\00t\00s\00 \00w\00o\00r\00k\00s\00 \00a\00s\00 \00e\00x\00p\00e\00c\00t\00e\00d\00\00\00\00\00\00\00")
 (data (i32.const 8828) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8860) "\8c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00n\00\00\00r\00o\00o\00k\00A\00t\00t\00a\00c\00k\00s\00O\00n\00T\00h\00e\00F\00l\00y\00 \00w\00i\00t\00h\00o\00u\00t\00 \00b\00l\00o\00c\00k\00 \00o\00u\00t\00p\00u\00t\00s\00 \00c\00o\00r\00r\00e\00c\00t\00 \00v\00a\00l\00u\00e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9004) "\1c\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\fe\01\01\01\01\01\01\01\fd\02\02\02\02\02\02\02\fb\04\04\04\04\04\04\04\f7\08\08\08\08\08\08\08\ef\10\10\10\10\10\10\10\df       \bf@@@@@@@\7f\80\80\80\80\80\80\80\01\fe\01\01\01\01\01\01\02\fd\02\02\02\02\02\02\04\fb\04\04\04\04\04\04\08\f7\08\08\08\08\08\08\10\ef\10\10\10\10\10\10 \df      @\bf@@@@@@\80\7f\80\80\80\80\80\80\01\01\fe\01\01\01\01\01\02\02\fd\02\02\02\02\02\04\04\fb\04\04\04\04\04\08\08\f7\08\08\08\08\08\10\10\ef\10\10\10\10\10  \df     @@\bf@@@@@\80\80\7f\80\80\80\80\80\01\01\01\fe\01\01\01\01\02\02\02\fd\02\02\02\02\04\04\04\fb\04\04\04\04\08\08\08\f7\08\08\08\08\10\10\10\ef\10\10\10\10   \df    @@@\bf@@@@\80\80\80\7f\80\80\80\80\01\01\01\01\fe\01\01\01\02\02\02\02\fd\02\02\02\04\04\04\04\fb\04\04\04\08\08\08\08\f7\08\08\08\10\10\10\10\ef\10\10\10    \df   @@@@\bf@@@\80\80\80\80\7f\80\80\80\01\01\01\01\01\fe\01\01\02\02\02\02\02\fd\02\02\04\04\04\04\04\fb\04\04\08\08\08\08\08\f7\08\08\10\10\10\10\10\ef\10\10     \df  @@@@@\bf@@\80\80\80\80\80\7f\80\80\01\01\01\01\01\01\fe\01\02\02\02\02\02\02\fd\02\04\04\04\04\04\04\fb\04\08\08\08\08\08\08\f7\08\10\10\10\10\10\10\ef\10      \df @@@@@@\bf@\80\80\80\80\80\80\7f\80\01\01\01\01\01\01\01\fe\02\02\02\02\02\02\02\fd\04\04\04\04\04\04\04\fb\08\08\08\08\08\08\08\f7\10\10\10\10\10\10\10\ef       \df@@@@@@@\bf\80\80\80\80\80\80\80\7f\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9548) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\07\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9580) "\8c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00r\00\00\00b\00i\00s\00h\00o\00p\00A\00t\00t\00a\00c\00k\00s\00O\00n\00T\00h\00e\00F\00l\00y\00 \00w\00i\00t\00h\00o\00u\00t\00 \00b\00l\00o\00c\00k\00 \00o\00u\00t\00p\00u\00t\00s\00 \00c\00o\00r\00r\00e\00c\00t\00 \00v\00a\00l\00u\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9724) "\1c\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\04\08\10 @\80\00\05\08\10 @\80\00\00\n\11 @\80\00\00\00\14\"A\80\00\00\00\00(D\82\01\00\00\00\00P\88\04\02\01\00\00\00\a0\10\08\04\02\01\00\00@ \10\08\04\02\01\02\00\02\04\08\10 @\05\00\05\08\10 @\80\n\00\n\11 @\80\00\14\00\14\"A\80\00\00(\00(D\82\01\00\00P\00P\88\04\02\01\00\a0\00\a0\10\08\04\02\01@\00@ \10\08\04\02\04\02\00\02\04\08\10 \08\05\00\05\08\10 @\11\n\00\n\11 @\80\"\14\00\14\"A\80\00D(\00(D\82\01\00\88P\00P\88\04\02\01\10\a0\00\a0\10\08\04\02 @\00@ \10\08\04\08\04\02\00\02\04\08\10\10\08\05\00\05\08\10  \11\n\00\n\11 @A\"\14\00\14\"A\80\82D(\00(D\82\01\04\88P\00P\88\04\02\08\10\a0\00\a0\10\08\04\10 @\00@ \10\08\10\08\04\02\00\02\04\08 \10\08\05\00\05\08\10@ \11\n\00\n\11 \80A\"\14\00\14\"A\01\82D(\00(D\82\02\04\88P\00P\88\04\04\08\10\a0\00\a0\10\08\08\10 @\00@ \10 \10\08\04\02\00\02\04@ \10\08\05\00\05\08\80@ \11\n\00\n\11\00\80A\"\14\00\14\"\00\01\82D(\00(D\01\02\04\88P\00P\88\02\04\08\10\a0\00\a0\10\04\08\10 @\00@ @ \10\08\04\02\00\02\80@ \10\08\05\00\05\00\80@ \11\n\00\n\00\00\80A\"\14\00\14\00\00\01\82D(\00(\00\01\02\04\88P\00P\01\02\04\08\10\a0\00\a0\02\04\08\10 @\00@\80@ \10\08\04\02\00\00\80@ \10\08\05\00\00\00\80@ \11\n\00\00\00\00\80A\"\14\00\00\00\00\01\82D(\00\00\00\01\02\04\88P\00\00\01\02\04\08\10\a0\00\01\02\04\08\10 @\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10268) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10300) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\004\00\00\00m\00a\00s\00k\00R\00o\00o\00k\00A\00t\00t\00a\00c\00k\00s\00 \00i\00s\00 \00c\00o\00r\00r\00e\00c\00t\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10380) "\1c\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00~\01\01\01\01\01\01\00|\02\02\02\02\02\02\00z\04\04\04\04\04\04\00v\08\08\08\08\08\08\00n\10\10\10\10\10\10\00^      \00>@@@@@@\00~\80\80\80\80\80\80\00\00~\01\01\01\01\01\00\00|\02\02\02\02\02\00\00z\04\04\04\04\04\00\00v\08\08\08\08\08\00\00n\10\10\10\10\10\00\00^     \00\00>@@@@@\00\00~\80\80\80\80\80\00\00\01~\01\01\01\01\00\00\02|\02\02\02\02\00\00\04z\04\04\04\04\00\00\08v\08\08\08\08\00\00\10n\10\10\10\10\00\00 ^    \00\00@>@@@@\00\00\80~\80\80\80\80\00\00\01\01~\01\01\01\00\00\02\02|\02\02\02\00\00\04\04z\04\04\04\00\00\08\08v\08\08\08\00\00\10\10n\10\10\10\00\00  ^   \00\00@@>@@@\00\00\80\80~\80\80\80\00\00\01\01\01~\01\01\00\00\02\02\02|\02\02\00\00\04\04\04z\04\04\00\00\08\08\08v\08\08\00\00\10\10\10n\10\10\00\00   ^  \00\00@@@>@@\00\00\80\80\80~\80\80\00\00\01\01\01\01~\01\00\00\02\02\02\02|\02\00\00\04\04\04\04z\04\00\00\08\08\08\08v\08\00\00\10\10\10\10n\10\00\00    ^ \00\00@@@@>@\00\00\80\80\80\80~\80\00\00\01\01\01\01\01~\00\00\02\02\02\02\02|\00\00\04\04\04\04\04z\00\00\08\08\08\08\08v\00\00\10\10\10\10\10n\00\00     ^\00\00@@@@@>\00\00\80\80\80\80\80~\00\00\01\01\01\01\01\01~\00\02\02\02\02\02\02|\00\04\04\04\04\04\04z\00\08\08\08\08\08\08v\00\10\10\10\10\10\10n\00      ^\00@@@@@@>\00\80\80\80\80\80\80~\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10924) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10956) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\008\00\00\00m\00a\00s\00k\00B\00i\00s\00h\00o\00p\00A\00t\00t\00a\00c\00k\00s\00 \00i\00s\00 \00c\00o\00r\00r\00e\00c\00t\00\00\00\00\00")
 (data (i32.const 11036) "\1c\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\04\08\10 @\00\00\04\08\10 @\00\00\00\n\10 @\00\00\00\00\14\"@\00\00\00\00\00(D\02\00\00\00\00\00P\08\04\02\00\00\00\00 \10\08\04\02\00\00\00@ \10\08\04\02\00\00\00\02\04\08\10 \00\00\00\04\08\10 @\00\00\00\n\10 @\00\00\00\00\14\"@\00\00\00\00\00(D\02\00\00\00\00\00P\08\04\02\00\00\00\00 \10\08\04\02\00\00\00@ \10\08\04\00\00\02\00\02\04\08\10\00\00\04\00\04\08\10 \00\00\n\00\n\10 @\00\00\14\00\14\"@\00\00\00(\00(D\02\00\00\00P\00P\08\04\02\00\00 \00 \10\08\04\00\00@\00@ \10\08\00\00\04\02\00\02\04\08\00\00\08\04\00\04\08\10\00\00\10\n\00\n\10 \00\00\"\14\00\14\"@\00\00D(\00(D\02\00\00\08P\00P\08\04\00\00\10 \00 \10\08\00\00 @\00@ \10\00\00\08\04\02\00\02\04\00\00\10\08\04\00\04\08\00\00 \10\n\00\n\10\00\00@\"\14\00\14\"\00\00\02D(\00(D\00\00\04\08P\00P\08\00\00\08\10 \00 \10\00\00\10 @\00@ \00\00\10\08\04\02\00\02\00\00 \10\08\04\00\04\00\00@ \10\n\00\n\00\00\00@\"\14\00\14\00\00\00\02D(\00(\00\00\02\04\08P\00P\00\00\04\08\10 \00 \00\00\08\10 @\00@\00\00 \10\08\04\02\00\00\00@ \10\08\04\00\00\00\00@ \10\n\00\00\00\00\00@\"\14\00\00\00\00\00\02D(\00\00\00\00\02\04\08P\00\00\00\02\04\08\10 \00\00\00\04\08\10 @\00\00\00@ \10\08\04\02\00\00\00@ \10\08\04\00\00\00\00@ \10\n\00\00\00\00\00@\"\14\00\00\00\00\00\02D(\00\00\00\00\02\04\08P\00\00\00\02\04\08\10 \00\00\02\04\08\10 @\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11580) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11612) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\000\00\00\00k\00i\00n\00g\00 \00a\00t\00t\00a\00c\00k\00s\00 \00a\00r\00e\00 \00c\00o\00r\00r\00e\00c\00t\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11692) "\1c\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\02\03\00\00\00\00\00\00\05\07\00\00\00\00\00\00\n\0e\00\00\00\00\00\00\14\1c\00\00\00\00\00\00(8\00\00\00\00\00\00Pp\00\00\00\00\00\00\a0\e0\00\00\00\00\00\00@\c0\00\00\00\00\00\00\03\02\03\00\00\00\00\00\07\05\07\00\00\00\00\00\0e\n\0e\00\00\00\00\00\1c\14\1c\00\00\00\00\008(8\00\00\00\00\00pPp\00\00\00\00\00\e0\a0\e0\00\00\00\00\00\c0@\c0\00\00\00\00\00\00\03\02\03\00\00\00\00\00\07\05\07\00\00\00\00\00\0e\n\0e\00\00\00\00\00\1c\14\1c\00\00\00\00\008(8\00\00\00\00\00pPp\00\00\00\00\00\e0\a0\e0\00\00\00\00\00\c0@\c0\00\00\00\00\00\00\03\02\03\00\00\00\00\00\07\05\07\00\00\00\00\00\0e\n\0e\00\00\00\00\00\1c\14\1c\00\00\00\00\008(8\00\00\00\00\00pPp\00\00\00\00\00\e0\a0\e0\00\00\00\00\00\c0@\c0\00\00\00\00\00\00\03\02\03\00\00\00\00\00\07\05\07\00\00\00\00\00\0e\n\0e\00\00\00\00\00\1c\14\1c\00\00\00\00\008(8\00\00\00\00\00pPp\00\00\00\00\00\e0\a0\e0\00\00\00\00\00\c0@\c0\00\00\00\00\00\00\03\02\03\00\00\00\00\00\07\05\07\00\00\00\00\00\0e\n\0e\00\00\00\00\00\1c\14\1c\00\00\00\00\008(8\00\00\00\00\00pPp\00\00\00\00\00\e0\a0\e0\00\00\00\00\00\c0@\c0\00\00\00\00\00\00\03\02\03\00\00\00\00\00\07\05\07\00\00\00\00\00\0e\n\0e\00\00\00\00\00\1c\14\1c\00\00\00\00\008(8\00\00\00\00\00pPp\00\00\00\00\00\e0\a0\e0\00\00\00\00\00\c0@\c0\00\00\00\00\00\00\03\02\00\00\00\00\00\00\07\05\00\00\00\00\00\00\0e\n\00\00\00\00\00\00\1c\14\00\00\00\00\00\008(\00\00\00\00\00\00pP\00\00\00\00\00\00\e0\a0\00\00\00\00\00\00\c0@\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12236) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12268) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\004\00\00\00k\00n\00i\00g\00h\00t\00 \00a\00t\00t\00a\00c\00k\00s\00 \00a\00r\00e\00 \00c\00o\00r\00r\00e\00c\00t\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12348) "\1c\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\04\02\00\00\00\00\00\00\08\05\00\00\00\00\00\00\11\n\00\00\00\00\00\00\"\14\00\00\00\00\00\00D(\00\00\00\00\00\00\88P\00\00\00\00\00\00\10\a0\00\00\00\00\00\00 @\00\00\00\00\00\04\00\04\02\00\00\00\00\08\00\08\05\00\00\00\00\11\00\11\n\00\00\00\00\"\00\"\14\00\00\00\00D\00D(\00\00\00\00\88\00\88P\00\00\00\00\10\00\10\a0\00\00\00\00 \00 @\00\00\00\00\02\04\00\04\02\00\00\00\05\08\00\08\05\00\00\00\n\11\00\11\n\00\00\00\14\"\00\"\14\00\00\00(D\00D(\00\00\00P\88\00\88P\00\00\00\a0\10\00\10\a0\00\00\00@ \00 @\00\00\00\00\02\04\00\04\02\00\00\00\05\08\00\08\05\00\00\00\n\11\00\11\n\00\00\00\14\"\00\"\14\00\00\00(D\00D(\00\00\00P\88\00\88P\00\00\00\a0\10\00\10\a0\00\00\00@ \00 @\00\00\00\00\02\04\00\04\02\00\00\00\05\08\00\08\05\00\00\00\n\11\00\11\n\00\00\00\14\"\00\"\14\00\00\00(D\00D(\00\00\00P\88\00\88P\00\00\00\a0\10\00\10\a0\00\00\00@ \00 @\00\00\00\00\02\04\00\04\02\00\00\00\05\08\00\08\05\00\00\00\n\11\00\11\n\00\00\00\14\"\00\"\14\00\00\00(D\00D(\00\00\00P\88\00\88P\00\00\00\a0\10\00\10\a0\00\00\00@ \00 @\00\00\00\00\02\04\00\04\00\00\00\00\05\08\00\08\00\00\00\00\n\11\00\11\00\00\00\00\14\"\00\"\00\00\00\00(D\00D\00\00\00\00P\88\00\88\00\00\00\00\a0\10\00\10\00\00\00\00@ \00 \00\00\00\00\00\02\04\00\00\00\00\00\00\05\08\00\00\00\00\00\00\n\11\00\00\00\00\00\00\14\"\00\00\00\00\00\00(D\00\00\00\00\00\00P\88\00\00\00\00\00\00\a0\10\00\00\00\00\00\00@ \00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12892) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12924) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00<\00\00\00b\00l\00a\00c\00k\00 \00p\00a\00w\00n\00 \00a\00t\00t\00a\00c\00k\00s\00 \00a\00r\00e\00 \00c\00o\00r\00r\00e\00c\00t\00")
 (data (i32.const 13004) "\1c\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00(\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\a0\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00(\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\a0\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00(\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\a0\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00(\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\a0\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00(\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\a0\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00(\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\a0\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00(\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\a0\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13548) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13580) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00<\00\00\00w\00h\00i\00t\00e\00 \00p\00a\00w\00n\00 \00a\00t\00t\00a\00c\00k\00s\00 \00a\00r\00e\00 \00c\00o\00r\00r\00e\00c\00t\00")
 (data (i32.const 13660) "\1c\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00(\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\a0\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00(\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\a0\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00(\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\a0\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00(\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\a0\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00(\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\a0\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00(\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\a0\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00(\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\a0\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14204) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14236) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\0f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14268) "\1c\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\08\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14300) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00*\00\00\00O\00b\00j\00e\00c\00t\00 \00a\00l\00r\00e\00a\00d\00y\00 \00p\00i\00n\00n\00e\00d\00\00\00")
 (data (i32.const 14364) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\00O\00b\00j\00e\00c\00t\00 \00i\00s\00 \00n\00o\00t\00 \00p\00i\00n\00n\00e\00d\00\00\00\00\00")
 (data (i32.const 14432) "\0e\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\02\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02A\00\00\00\00\00\00\02\t\00\00\00\00\00\00 \00\00\00\00\00\00\00\10\t\02\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\01\00\00\00\00\00\00")
 (table $0 17 funcref)
 (elem $0 (i32.const 1) $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|0 $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|1 $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|2 $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|3 $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|4 $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|5 $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|6 $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|7 $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|8 $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|9 $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|10 $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|11 $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|12 $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|13 $start:assembly/__tests__/barond.spec~anonymous|0 $start:node_modules/@as-pect/assembly/assembly/internal/noOp~anonymous|0)
 (export "__ignoreLogs" (func $node_modules/@as-pect/assembly/assembly/internal/log/__ignoreLogs))
 (export "__new" (func $~lib/rt/itcms/__new))
 (export "__pin" (func $~lib/rt/itcms/__pin))
 (export "__unpin" (func $~lib/rt/itcms/__unpin))
 (export "__collect" (func $~lib/rt/itcms/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "memory" (memory $0))
 (export "table" (table $0))
 (export "_start" (func $~start))
 (export "__call" (func $export:node_modules/@as-pect/assembly/assembly/internal/call/__call))
 (func $assembly/barond/Barond#setBit (param $this i32) (param $board i64) (param $square i32) (result i64)
  local.get $board
  global.get $assembly/barond/ONE
  local.get $square
  i64.extend_i32_s
  i64.shl
  i64.or
  local.tee $board
 )
 (func $assembly/barond/Barond#maskPawnAttacks (param $this i32) (param $side i32) (param $square i32) (result i64)
  (local $var$3 i64)
  (local $var$4 i64)
  i64.const 0
  local.set $var$3
  i64.const 0
  local.set $var$4
  local.get $this
  local.get $var$4
  local.get $square
  call $assembly/barond/Barond#setBit
  local.set $var$4
  local.get $side
  i32.const 0
  i32.eq
  if
   local.get $var$4
   i64.const 7
   i64.shr_u
   global.get $assembly/barond/NOT_A_FILE
   i64.and
   i64.const 0
   i64.gt_u
   if
    local.get $var$3
    local.get $var$4
    i64.const 7
    i64.shr_u
    i64.or
    local.set $var$3
   end
   local.get $var$4
   i64.const 9
   i64.shr_u
   global.get $assembly/barond/NOT_H_FILE
   i64.and
   i64.const 0
   i64.gt_u
   if
    local.get $var$3
    local.get $var$4
    i64.const 9
    i64.shr_u
    i64.or
    local.set $var$3
   end
  else
   local.get $side
   i32.const 1
   i32.eq
   if
    local.get $var$4
    i64.const 7
    i64.shl
    global.get $assembly/barond/NOT_H_FILE
    i64.and
    i64.const 0
    i64.gt_u
    if
     local.get $var$3
     local.get $var$4
     i64.const 7
     i64.shl
     i64.or
     local.set $var$3
    end
    local.get $var$4
    i64.const 9
    i64.shl
    global.get $assembly/barond/NOT_A_FILE
    i64.and
    i64.const 0
    i64.gt_u
    if
     local.get $var$3
     local.get $var$4
     i64.const 9
     i64.shl
     i64.or
     local.set $var$3
    end
   end
  end
  local.get $var$3
 )
 (func $~lib/rt/itcms/Object#set:rtSize (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=16
 )
 (func $~lib/rt/itcms/Object#set:nextWithColor (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/rt/itcms/Object#set:prev (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/rt/itcms/initLazy (param $space i32) (result i32)
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:prev
  local.get $space
 )
 (func $~lib/rt/itcms/Object#get:next (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
 )
 (func $~lib/rt/itcms/Object#get:color (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.and
 )
 (func $~lib/rt/itcms/visitRoots (param $cookie i32)
  (local $pn i32)
  (local $iter i32)
  (local $var$3 i32)
  local.get $cookie
  call $~lib/rt/__visit_globals
  global.get $~lib/rt/itcms/pinSpace
  local.set $pn
  local.get $pn
  call $~lib/rt/itcms/Object#get:next
  local.set $iter
  loop $while-continue|0
   local.get $iter
   local.get $pn
   i32.ne
   local.set $var$3
   local.get $var$3
   if
    i32.const 1
    drop
    local.get $iter
    call $~lib/rt/itcms/Object#get:color
    i32.const 3
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 5216
     i32.const 159
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $iter
    i32.const 20
    i32.add
    local.get $cookie
    call $~lib/rt/__visit_members
    local.get $iter
    call $~lib/rt/itcms/Object#get:next
    local.set $iter
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#set:color (param $this i32) (param $color i32)
  local.get $this
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $color
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#set:next (param $this i32) (param $obj i32)
  local.get $this
  local.get $obj
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#unlink (param $this i32)
  (local $next i32)
  (local $prev i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:next
  local.set $next
  local.get $next
  i32.const 0
  i32.eq
  if
   i32.const 1
   drop
   local.get $this
   i32.load $0 offset=8
   i32.const 0
   i32.eq
   if (result i32)
    local.get $this
    global.get $~lib/memory/__heap_base
    i32.lt_u
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 5216
    i32.const 127
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   return
  end
  local.get $this
  i32.load $0 offset=8
  local.set $prev
  i32.const 1
  drop
  local.get $prev
  i32.eqz
  if
   i32.const 0
   i32.const 5216
   i32.const 131
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $next
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $next
  call $~lib/rt/itcms/Object#set:next
 )
 (func $~lib/rt/__typeinfo (param $id i32) (result i32)
  (local $ptr i32)
  global.get $~lib/rt/__rtti_base
  local.set $ptr
  local.get $id
  local.get $ptr
  i32.load $0
  i32.gt_u
  if
   i32.const 4992
   i32.const 5344
   i32.const 22
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.get $ptr
  i32.const 4
  i32.add
  local.get $id
  i32.const 8
  i32.mul
  i32.add
  i32.load $0
 )
 (func $~lib/rt/itcms/Object#get:isPointerfree (param $this i32) (result i32)
  (local $rtId i32)
  local.get $this
  i32.load $0 offset=12
  local.set $rtId
  local.get $rtId
  i32.const 1
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $rtId
   call $~lib/rt/__typeinfo
   i32.const 32
   i32.and
   i32.const 0
   i32.ne
  end
 )
 (func $~lib/rt/itcms/Object#linkTo (param $this i32) (param $list i32) (param $withColor i32)
  (local $prev i32)
  local.get $list
  i32.load $0 offset=8
  local.set $prev
  local.get $this
  local.get $list
  local.get $withColor
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $this
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $this
  call $~lib/rt/itcms/Object#set:next
  local.get $list
  local.get $this
  call $~lib/rt/itcms/Object#set:prev
 )
 (func $~lib/rt/itcms/Object#makeGray (param $this i32)
  (local $var$1 i32)
  local.get $this
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $this
   i32.load $0 offset=8
   local.tee $var$1
   i32.eqz
   if (result i32)
    i32.const 0
    i32.const 5216
    i32.const 147
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   else
    local.get $var$1
   end
   global.set $~lib/rt/itcms/iter
  end
  local.get $this
  call $~lib/rt/itcms/Object#unlink
  local.get $this
  global.get $~lib/rt/itcms/toSpace
  local.get $this
  call $~lib/rt/itcms/Object#get:isPointerfree
  if (result i32)
   global.get $~lib/rt/itcms/white
   i32.eqz
  else
   i32.const 2
  end
  call $~lib/rt/itcms/Object#linkTo
 )
 (func $~lib/rt/itcms/__visit (param $ptr i32) (param $cookie i32)
  (local $obj i32)
  local.get $ptr
  i32.eqz
  if
   return
  end
  local.get $ptr
  i32.const 20
  i32.sub
  local.set $obj
  i32.const 0
  drop
  local.get $obj
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $obj
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/itcms/visitStack (param $cookie i32)
  (local $ptr i32)
  (local $var$2 i32)
  global.get $~lib/memory/__stack_pointer
  local.set $ptr
  loop $while-continue|0
   local.get $ptr
   global.get $~lib/memory/__heap_base
   i32.lt_u
   local.set $var$2
   local.get $var$2
   if
    local.get $ptr
    i32.load $0
    local.get $cookie
    call $~lib/rt/itcms/__visit
    local.get $ptr
    i32.const 4
    i32.add
    local.set $ptr
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#get:size (param $this i32) (result i32)
  i32.const 4
  local.get $this
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
 )
 (func $~lib/rt/tlsf/Root#set:flMap (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/rt/common/BLOCK#set:mmInfo (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/rt/tlsf/Block#set:prev (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/Block#set:next (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/rt/tlsf/removeBlock (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $prev i32)
  (local $next i32)
  (local $var$10 i32)
  (local $var$11 i32)
  local.get $block
  i32.load $0
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 5424
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 5424
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $var$6
   i32.const 1073741820
   local.tee $var$7
   local.get $var$6
   local.get $var$7
   i32.lt_u
   select
   local.set $var$6
   i32.const 31
   local.get $var$6
   i32.clz
   i32.sub
   local.set $fl
   local.get $var$6
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 5424
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  i32.load $0 offset=4
  local.set $prev
  local.get $block
  i32.load $0 offset=8
  local.set $next
  local.get $prev
  if
   local.get $prev
   local.get $next
   call $~lib/rt/tlsf/Block#set:next
  end
  local.get $next
  if
   local.get $next
   local.get $prev
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $block
  local.get $root
  local.set $var$10
  local.get $fl
  local.set $var$6
  local.get $sl
  local.set $var$7
  local.get $var$10
  local.get $var$6
  i32.const 4
  i32.shl
  local.get $var$7
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  i32.eq
  if
   local.get $root
   local.set $var$11
   local.get $fl
   local.set $var$10
   local.get $sl
   local.set $var$6
   local.get $next
   local.set $var$7
   local.get $var$11
   local.get $var$10
   i32.const 4
   i32.shl
   local.get $var$6
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $var$7
   i32.store $0 offset=96
   local.get $next
   i32.eqz
   if
    local.get $root
    local.set $var$6
    local.get $fl
    local.set $var$7
    local.get $var$6
    local.get $var$7
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $var$6
    local.get $root
    local.set $var$7
    local.get $fl
    local.set $var$11
    local.get $var$6
    i32.const 1
    local.get $sl
    i32.shl
    i32.const -1
    i32.xor
    i32.and
    local.tee $var$6
    local.set $var$10
    local.get $var$7
    local.get $var$11
    i32.const 2
    i32.shl
    i32.add
    local.get $var$10
    i32.store $0 offset=4
    local.get $var$6
    i32.eqz
    if
     local.get $root
     local.get $root
     i32.load $0
     i32.const 1
     local.get $fl
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     call $~lib/rt/tlsf/Root#set:flMap
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $var$3 i32)
  (local $right i32)
  (local $rightInfo i32)
  (local $var$6 i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $var$10 i32)
  (local $head i32)
  (local $var$12 i32)
  (local $var$13 i32)
  i32.const 1
  drop
  local.get $block
  i32.eqz
  if
   i32.const 0
   i32.const 5424
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  i32.load $0
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 5424
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  local.set $var$3
  local.get $var$3
  i32.const 4
  i32.add
  local.get $var$3
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
  local.set $right
  local.get $right
  i32.load $0
  local.set $rightInfo
  local.get $rightInfo
  i32.const 1
  i32.and
  if
   local.get $root
   local.get $right
   call $~lib/rt/tlsf/removeBlock
   local.get $block
   local.get $blockInfo
   i32.const 4
   i32.add
   local.get $rightInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   local.set $var$3
   local.get $var$3
   i32.const 4
   i32.add
   local.get $var$3
   i32.load $0
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.set $right
   local.get $right
   i32.load $0
   local.set $rightInfo
  end
  local.get $blockInfo
  i32.const 2
  i32.and
  if
   local.get $block
   local.set $var$3
   local.get $var$3
   i32.const 4
   i32.sub
   i32.load $0
   local.set $var$3
   local.get $var$3
   i32.load $0
   local.set $var$6
   i32.const 1
   drop
   local.get $var$6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 5424
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $root
   local.get $var$3
   call $~lib/rt/tlsf/removeBlock
   local.get $var$3
   local.set $block
   local.get $block
   local.get $var$6
   i32.const 4
   i32.add
   local.get $blockInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
  local.get $right
  local.get $rightInfo
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 5424
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  drop
  local.get $block
  i32.const 4
  i32.add
  local.get $size
  i32.add
  local.get $right
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 5424
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $right
  i32.const 4
  i32.sub
  local.get $block
  i32.store $0
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $var$3
   i32.const 1073741820
   local.tee $var$6
   local.get $var$3
   local.get $var$6
   i32.lt_u
   select
   local.set $var$3
   i32.const 31
   local.get $var$3
   i32.clz
   i32.sub
   local.set $fl
   local.get $var$3
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 5424
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $root
  local.set $var$10
  local.get $fl
  local.set $var$3
  local.get $sl
  local.set $var$6
  local.get $var$10
  local.get $var$3
  i32.const 4
  i32.shl
  local.get $var$6
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  local.set $head
  local.get $block
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $block
  local.get $head
  call $~lib/rt/tlsf/Block#set:next
  local.get $head
  if
   local.get $head
   local.get $block
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $root
  local.set $var$12
  local.get $fl
  local.set $var$10
  local.get $sl
  local.set $var$3
  local.get $block
  local.set $var$6
  local.get $var$12
  local.get $var$10
  i32.const 4
  i32.shl
  local.get $var$3
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $var$6
  i32.store $0 offset=96
  local.get $root
  local.get $root
  i32.load $0
  i32.const 1
  local.get $fl
  i32.shl
  i32.or
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $var$13
  local.get $fl
  local.set $var$12
  local.get $root
  local.set $var$3
  local.get $fl
  local.set $var$6
  local.get $var$3
  local.get $var$6
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=4
  i32.const 1
  local.get $sl
  i32.shl
  i32.or
  local.set $var$10
  local.get $var$13
  local.get $var$12
  i32.const 2
  i32.shl
  i32.add
  local.get $var$10
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $root i32) (param $start i32) (param $end i32) (result i32)
  (local $var$3 i32)
  (local $tail i32)
  (local $tailInfo i32)
  (local $size i32)
  (local $leftSize i32)
  (local $left i32)
  (local $var$9 i32)
  i32.const 1
  drop
  local.get $start
  local.get $end
  i32.le_u
  i32.eqz
  if
   i32.const 0
   i32.const 5424
   i32.const 377
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $start
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $start
  local.get $end
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $end
  local.get $root
  local.set $var$3
  local.get $var$3
  i32.load $0 offset=1568
  local.set $tail
  i32.const 0
  local.set $tailInfo
  local.get $tail
  if
   i32.const 1
   drop
   local.get $start
   local.get $tail
   i32.const 4
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 5424
    i32.const 384
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $start
   i32.const 16
   i32.sub
   local.get $tail
   i32.eq
   if
    local.get $start
    i32.const 16
    i32.sub
    local.set $start
    local.get $tail
    i32.load $0
    local.set $tailInfo
   else
    nop
   end
  else
   i32.const 1
   drop
   local.get $start
   local.get $root
   i32.const 1572
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 5424
    i32.const 397
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $end
  local.get $start
  i32.sub
  local.set $size
  local.get $size
  i32.const 4
  i32.const 12
  i32.add
  i32.const 4
  i32.add
  i32.lt_u
  if
   i32.const 0
   return
  end
  local.get $size
  i32.const 2
  i32.const 4
  i32.mul
  i32.sub
  local.set $leftSize
  local.get $start
  local.set $left
  local.get $left
  local.get $leftSize
  i32.const 1
  i32.or
  local.get $tailInfo
  i32.const 2
  i32.and
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:next
  local.get $start
  i32.const 4
  i32.add
  local.get $leftSize
  i32.add
  local.set $tail
  local.get $tail
  i32.const 0
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.set $var$9
  local.get $tail
  local.set $var$3
  local.get $var$9
  local.get $var$3
  i32.store $0 offset=1568
  local.get $root
  local.get $left
  call $~lib/rt/tlsf/insertBlock
  i32.const 1
 )
 (func $~lib/rt/tlsf/initialize
  (local $rootOffset i32)
  (local $pagesBefore i32)
  (local $pagesNeeded i32)
  (local $root i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $memStart i32)
  i32.const 0
  drop
  global.get $~lib/memory/__heap_base
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $rootOffset
  memory.size $0
  local.set $pagesBefore
  local.get $rootOffset
  i32.const 1572
  i32.add
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesNeeded
  local.get $pagesBefore
  i32.gt_s
  if (result i32)
   local.get $pagesNeeded
   local.get $pagesBefore
   i32.sub
   memory.grow $0
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  local.get $rootOffset
  local.set $root
  local.get $root
  i32.const 0
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $var$5
  i32.const 0
  local.set $var$4
  local.get $var$5
  local.get $var$4
  i32.store $0 offset=1568
  i32.const 0
  local.set $var$5
  loop $for-loop|0
   local.get $var$5
   i32.const 23
   i32.lt_u
   local.set $var$4
   local.get $var$4
   if
    local.get $root
    local.set $var$8
    local.get $var$5
    local.set $var$7
    i32.const 0
    local.set $var$6
    local.get $var$8
    local.get $var$7
    i32.const 2
    i32.shl
    i32.add
    local.get $var$6
    i32.store $0 offset=4
    i32.const 0
    local.set $var$8
    loop $for-loop|1
     local.get $var$8
     i32.const 16
     i32.lt_u
     local.set $var$7
     local.get $var$7
     if
      local.get $root
      local.set $var$11
      local.get $var$5
      local.set $var$10
      local.get $var$8
      local.set $var$9
      i32.const 0
      local.set $var$6
      local.get $var$11
      local.get $var$10
      i32.const 4
      i32.shl
      local.get $var$9
      i32.add
      i32.const 2
      i32.shl
      i32.add
      local.get $var$6
      i32.store $0 offset=96
      local.get $var$8
      i32.const 1
      i32.add
      local.set $var$8
      br $for-loop|1
     end
    end
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
  local.get $rootOffset
  i32.const 1572
  i32.add
  local.set $memStart
  i32.const 0
  drop
  local.get $root
  local.get $memStart
  memory.size $0
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
  local.get $root
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/checkUsedBlock (param $ptr i32) (result i32)
  (local $block i32)
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $block
  local.get $ptr
  i32.const 0
  i32.ne
  if (result i32)
   local.get $ptr
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $block
   i32.load $0
   i32.const 1
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 5424
   i32.const 559
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
 )
 (func $~lib/rt/tlsf/freeBlock (param $root i32) (param $block i32)
  i32.const 0
  drop
  local.get $block
  local.get $block
  i32.load $0
  i32.const 1
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/__free (param $ptr i32)
  local.get $ptr
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $ptr
  call $~lib/rt/tlsf/checkUsedBlock
  call $~lib/rt/tlsf/freeBlock
 )
 (func $~lib/rt/itcms/free (param $obj i32)
  local.get $obj
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:nextWithColor
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:prev
  else
   global.get $~lib/rt/itcms/total
   local.get $obj
   call $~lib/rt/itcms/Object#get:size
   i32.sub
   global.set $~lib/rt/itcms/total
   i32.const 0
   drop
   local.get $obj
   i32.const 4
   i32.add
   call $~lib/rt/tlsf/__free
  end
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $obj i32)
  (local $var$1 i32)
  (local $var$2 i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      local.set $var$1
      local.get $var$1
      i32.const 0
      i32.eq
      br_if $case0|0
      local.get $var$1
      i32.const 1
      i32.eq
      br_if $case1|0
      local.get $var$1
      i32.const 2
      i32.eq
      br_if $case2|0
      br $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     i32.const 0
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     i32.const 1
     i32.mul
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $var$1
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    loop $while-continue|1
     local.get $obj
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     local.set $var$2
     local.get $var$2
     if
      local.get $obj
      global.set $~lib/rt/itcms/iter
      local.get $obj
      call $~lib/rt/itcms/Object#get:color
      local.get $var$1
      i32.ne
      if
       local.get $obj
       local.get $var$1
       call $~lib/rt/itcms/Object#set:color
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $obj
       i32.const 20
       i32.add
       i32.const 0
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       i32.const 1
       i32.mul
       return
      end
      local.get $obj
      call $~lib/rt/itcms/Object#get:next
      local.set $obj
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    i32.const 0
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    local.get $obj
    global.get $~lib/rt/itcms/toSpace
    i32.eq
    if
     i32.const 0
     call $~lib/rt/itcms/visitStack
     global.get $~lib/rt/itcms/iter
     call $~lib/rt/itcms/Object#get:next
     local.set $obj
     loop $while-continue|2
      local.get $obj
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      local.set $var$2
      local.get $var$2
      if
       local.get $obj
       call $~lib/rt/itcms/Object#get:color
       local.get $var$1
       i32.ne
       if
        local.get $obj
        local.get $var$1
        call $~lib/rt/itcms/Object#set:color
        local.get $obj
        i32.const 20
        i32.add
        i32.const 0
        call $~lib/rt/__visit_members
       end
       local.get $obj
       call $~lib/rt/itcms/Object#get:next
       local.set $obj
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $var$2
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $var$2
     global.set $~lib/rt/itcms/toSpace
     local.get $var$1
     global.set $~lib/rt/itcms/white
     local.get $var$2
     call $~lib/rt/itcms/Object#get:next
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    i32.const 1
    i32.mul
    return
   end
   global.get $~lib/rt/itcms/iter
   local.set $obj
   local.get $obj
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $obj
    call $~lib/rt/itcms/Object#get:next
    global.set $~lib/rt/itcms/iter
    i32.const 1
    drop
    local.get $obj
    call $~lib/rt/itcms/Object#get:color
    global.get $~lib/rt/itcms/white
    i32.eqz
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 5216
     i32.const 228
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $obj
    call $~lib/rt/itcms/free
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:nextWithColor
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:prev
   i32.const 0
   global.set $~lib/rt/itcms/state
   br $break|0
  end
  i32.const 0
 )
 (func $~lib/rt/itcms/interrupt
  (local $budget i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1024
  i32.const 200
  i32.mul
  i32.const 100
  i32.div_u
  local.set $budget
  loop $do-loop|0
   local.get $budget
   call $~lib/rt/itcms/step
   i32.sub
   local.set $budget
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.eq
   if
    i32.const 0
    drop
    global.get $~lib/rt/itcms/total
    i64.extend_i32_u
    i32.const 200
    i64.extend_i32_u
    i64.mul
    i64.const 100
    i64.div_u
    i32.wrap_i64
    i32.const 1024
    i32.add
    global.set $~lib/rt/itcms/threshold
    i32.const 0
    drop
    return
   end
   local.get $budget
   i32.const 0
   i32.gt_s
   br_if $do-loop|0
  end
  i32.const 0
  drop
  global.get $~lib/rt/itcms/total
  i32.const 1024
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.sub
  i32.const 1024
  i32.lt_u
  i32.mul
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
 )
 (func $~lib/rt/tlsf/computeSize (param $size i32) (result i32)
  local.get $size
  i32.const 12
  i32.le_u
  if (result i32)
   i32.const 12
  else
   local.get $size
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
  end
 )
 (func $~lib/rt/tlsf/prepareSize (param $size i32) (result i32)
  local.get $size
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 5152
   i32.const 5424
   i32.const 458
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $size
  call $~lib/rt/tlsf/computeSize
 )
 (func $~lib/rt/tlsf/searchBlock (param $root i32) (param $size i32) (result i32)
  (local $fl i32)
  (local $sl i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $slMap i32)
  (local $head i32)
  (local $var$8 i32)
  (local $var$9 i32)
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   i32.const 536870910
   i32.lt_u
   if (result i32)
    local.get $size
    i32.const 1
    i32.const 27
    local.get $size
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
   else
    local.get $size
   end
   local.set $var$4
   i32.const 31
   local.get $var$4
   i32.clz
   i32.sub
   local.set $fl
   local.get $var$4
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 5424
   i32.const 330
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $root
  local.set $var$5
  local.get $fl
  local.set $var$4
  local.get $var$5
  local.get $var$4
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=4
  i32.const 0
  i32.const -1
  i32.xor
  local.get $sl
  i32.shl
  i32.and
  local.set $slMap
  i32.const 0
  local.set $head
  local.get $slMap
  i32.eqz
  if
   local.get $root
   i32.load $0
   i32.const 0
   i32.const -1
   i32.xor
   local.get $fl
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.set $var$5
   local.get $var$5
   i32.eqz
   if
    i32.const 0
    local.set $head
   else
    local.get $var$5
    i32.ctz
    local.set $fl
    local.get $root
    local.set $var$8
    local.get $fl
    local.set $var$4
    local.get $var$8
    local.get $var$4
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $slMap
    i32.const 1
    drop
    local.get $slMap
    i32.eqz
    if
     i32.const 0
     i32.const 5424
     i32.const 343
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $root
    local.set $var$9
    local.get $fl
    local.set $var$8
    local.get $slMap
    i32.ctz
    local.set $var$4
    local.get $var$9
    local.get $var$8
    i32.const 4
    i32.shl
    local.get $var$4
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=96
    local.set $head
   end
  else
   local.get $root
   local.set $var$9
   local.get $fl
   local.set $var$8
   local.get $slMap
   i32.ctz
   local.set $var$4
   local.get $var$9
   local.get $var$8
   i32.const 4
   i32.shl
   local.get $var$4
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=96
   local.set $head
  end
  local.get $head
 )
 (func $~lib/rt/tlsf/growMemory (param $root i32) (param $size i32)
  (local $pagesBefore i32)
  (local $var$3 i32)
  (local $pagesNeeded i32)
  (local $var$5 i32)
  (local $pagesWanted i32)
  (local $pagesAfter i32)
  i32.const 0
  drop
  local.get $size
  i32.const 536870910
  i32.lt_u
  if
   local.get $size
   i32.const 1
   i32.const 27
   local.get $size
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.set $size
  end
  memory.size $0
  local.set $pagesBefore
  local.get $size
  i32.const 4
  local.get $pagesBefore
  i32.const 16
  i32.shl
  i32.const 4
  i32.sub
  local.get $root
  local.set $var$3
  local.get $var$3
  i32.load $0 offset=1568
  i32.ne
  i32.shl
  i32.add
  local.set $size
  local.get $size
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesBefore
  local.tee $var$3
  local.get $pagesNeeded
  local.tee $var$5
  local.get $var$3
  local.get $var$5
  i32.gt_s
  select
  local.set $pagesWanted
  local.get $pagesWanted
  memory.grow $0
  i32.const 0
  i32.lt_s
  if
   local.get $pagesNeeded
   memory.grow $0
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
  end
  memory.size $0
  local.set $pagesAfter
  local.get $root
  local.get $pagesBefore
  i32.const 16
  i32.shl
  local.get $pagesAfter
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
 )
 (func $~lib/rt/tlsf/prepareBlock (param $root i32) (param $block i32) (param $size i32)
  (local $blockInfo i32)
  (local $remaining i32)
  (local $var$5 i32)
  local.get $block
  i32.load $0
  local.set $blockInfo
  i32.const 1
  drop
  local.get $size
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 5424
   i32.const 357
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $size
  i32.sub
  local.set $remaining
  local.get $remaining
  i32.const 4
  i32.const 12
  i32.add
  i32.ge_u
  if
   local.get $block
   local.get $size
   local.get $blockInfo
   i32.const 2
   i32.and
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   i32.const 4
   i32.add
   local.get $size
   i32.add
   local.set $var$5
   local.get $var$5
   local.get $remaining
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $root
   local.get $var$5
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $block
   local.get $blockInfo
   i32.const 1
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   local.set $var$5
   local.get $var$5
   i32.const 4
   i32.add
   local.get $var$5
   i32.load $0
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.get $block
   local.set $var$5
   local.get $var$5
   i32.const 4
   i32.add
   local.get $var$5
   i32.load $0
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   i32.load $0
   i32.const 2
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $root i32) (param $size i32) (result i32)
  (local $payloadSize i32)
  (local $block i32)
  local.get $size
  call $~lib/rt/tlsf/prepareSize
  local.set $payloadSize
  local.get $root
  local.get $payloadSize
  call $~lib/rt/tlsf/searchBlock
  local.set $block
  local.get $block
  i32.eqz
  if
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/growMemory
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/searchBlock
   local.set $block
   i32.const 1
   drop
   local.get $block
   i32.eqz
   if
    i32.const 0
    i32.const 5424
    i32.const 496
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 1
  drop
  local.get $block
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $payloadSize
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 5424
   i32.const 498
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/removeBlock
  local.get $root
  local.get $block
  local.get $payloadSize
  call $~lib/rt/tlsf/prepareBlock
  i32.const 0
  drop
  local.get $block
 )
 (func $~lib/rt/tlsf/__alloc (param $size i32) (result i32)
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $size
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
 )
 (func $~lib/rt/itcms/Object#set:rtId (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/rt/itcms/__new (param $size i32) (param $id i32) (result i32)
  (local $obj i32)
  (local $ptr i32)
  local.get $size
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 5152
   i32.const 5216
   i32.const 260
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   call $~lib/rt/itcms/interrupt
  end
  i32.const 16
  local.get $size
  i32.add
  call $~lib/rt/tlsf/__alloc
  i32.const 4
  i32.sub
  local.set $obj
  local.get $obj
  local.get $id
  call $~lib/rt/itcms/Object#set:rtId
  local.get $obj
  local.get $size
  call $~lib/rt/itcms/Object#set:rtSize
  local.get $obj
  global.get $~lib/rt/itcms/fromSpace
  global.get $~lib/rt/itcms/white
  call $~lib/rt/itcms/Object#linkTo
  global.get $~lib/rt/itcms/total
  local.get $obj
  call $~lib/rt/itcms/Object#get:size
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $obj
  i32.const 20
  i32.add
  local.set $ptr
  local.get $ptr
  i32.const 0
  local.get $size
  memory.fill $0
  local.get $ptr
 )
 (func $~lib/rt/itcms/__renew (param $oldPtr i32) (param $size i32) (result i32)
  (local $oldObj i32)
  (local $newPtr i32)
  (local $var$4 i32)
  (local $var$5 i32)
  local.get $oldPtr
  i32.const 20
  i32.sub
  local.set $oldObj
  local.get $size
  local.get $oldObj
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $oldObj
   local.get $size
   call $~lib/rt/itcms/Object#set:rtSize
   local.get $oldPtr
   return
  end
  local.get $size
  local.get $oldObj
  i32.load $0 offset=12
  call $~lib/rt/itcms/__new
  local.set $newPtr
  local.get $newPtr
  local.get $oldPtr
  local.get $size
  local.tee $var$4
  local.get $oldObj
  i32.load $0 offset=16
  local.tee $var$5
  local.get $var$4
  local.get $var$5
  i32.lt_u
  select
  memory.copy $0 $0
  local.get $newPtr
 )
 (func $~lib/rt/itcms/__link (param $parentPtr i32) (param $childPtr i32) (param $expectMultiple i32)
  (local $child i32)
  (local $var$4 i32)
  (local $var$5 i32)
  local.get $childPtr
  i32.eqz
  if
   return
  end
  i32.const 1
  drop
  local.get $parentPtr
  i32.eqz
  if
   i32.const 0
   i32.const 5216
   i32.const 294
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $childPtr
  i32.const 20
  i32.sub
  local.set $child
  local.get $child
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $parentPtr
   i32.const 20
   i32.sub
   local.set $var$4
   local.get $var$4
   call $~lib/rt/itcms/Object#get:color
   local.set $var$5
   local.get $var$5
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $expectMultiple
    if
     local.get $var$4
     call $~lib/rt/itcms/Object#makeGray
    else
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   else
    local.get $var$5
    i32.const 3
    i32.eq
    if (result i32)
     global.get $~lib/rt/itcms/state
     i32.const 1
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
 (func $~lib/array/ensureCapacity (param $array i32) (param $newSize i32) (param $alignLog2 i32) (param $canGrow i32)
  (local $oldCapacity i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $array
  i32.load $0 offset=8
  local.set $oldCapacity
  local.get $newSize
  local.get $oldCapacity
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   local.get $newSize
   i32.const 1073741820
   local.get $alignLog2
   i32.shr_u
   i32.gt_u
   if
    i32.const 5104
    i32.const 5056
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   local.get $array
   i32.load $0
   local.set $var$5
   local.get $newSize
   local.tee $var$6
   i32.const 8
   local.tee $var$7
   local.get $var$6
   local.get $var$7
   i32.gt_u
   select
   local.get $alignLog2
   i32.shl
   local.set $var$6
   local.get $canGrow
   if
    local.get $oldCapacity
    i32.const 1
    i32.shl
    local.tee $var$7
    i32.const 1073741820
    local.tee $var$8
    local.get $var$7
    local.get $var$8
    i32.lt_u
    select
    local.tee $var$8
    local.get $var$6
    local.tee $var$7
    local.get $var$8
    local.get $var$7
    i32.gt_u
    select
    local.set $var$6
   end
   local.get $var$5
   local.get $var$6
   call $~lib/rt/itcms/__renew
   local.set $var$8
   i32.const 2
   global.get $~lib/shared/runtime/Runtime.Incremental
   i32.ne
   drop
   local.get $var$8
   local.get $var$5
   i32.ne
   if
    local.get $array
    local.get $var$8
    i32.store $0
    local.get $array
    local.get $var$8
    i32.store $0 offset=4
    local.get $array
    local.get $var$8
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   local.get $array
   local.get $var$6
   i32.store $0 offset=8
  end
 )
 (func $~lib/array/Array<u64>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<u64>#__uset (param $this i32) (param $index i32) (param $value i64)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  local.get $value
  i64.store $0
  i32.const 0
  drop
 )
 (func $~lib/array/Array<u64>#__set (param $this i32) (param $index i32) (param $value i64)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   local.get $index
   i32.const 0
   i32.lt_s
   if
    i32.const 4992
    i32.const 5056
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   i32.const 3
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $this
   local.get $index
   i32.const 1
   i32.add
   call $~lib/array/Array<u64>#set:length_
  end
  local.get $this
  local.get $index
  local.get $value
  call $~lib/array/Array<u64>#__uset
 )
 (func $assembly/barond/Barond#maskKnightAttacks (param $this i32) (param $square i32) (result i64)
  (local $var$2 i64)
  (local $var$3 i64)
  i64.const 0
  local.set $var$2
  i64.const 0
  local.set $var$3
  local.get $this
  local.get $var$3
  local.get $square
  call $assembly/barond/Barond#setBit
  local.set $var$3
  local.get $var$3
  i64.const 17
  i64.shr_u
  global.get $assembly/barond/NOT_H_FILE
  i64.and
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 17
   i64.shr_u
   i64.or
   local.set $var$2
  end
  local.get $var$3
  i64.const 15
  i64.shr_u
  global.get $assembly/barond/NOT_A_FILE
  i64.and
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 15
   i64.shr_u
   i64.or
   local.set $var$2
  end
  local.get $var$3
  i64.const 10
  i64.shr_u
  global.get $assembly/barond/NOT_HG_FILE
  i64.and
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 10
   i64.shr_u
   i64.or
   local.set $var$2
  end
  local.get $var$3
  i64.const 6
  i64.shr_u
  global.get $assembly/barond/NOT_AB_FILE
  i64.and
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 6
   i64.shr_u
   i64.or
   local.set $var$2
  end
  local.get $var$3
  i64.const 17
  i64.shl
  global.get $assembly/barond/NOT_A_FILE
  i64.and
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 17
   i64.shl
   i64.or
   local.set $var$2
  end
  local.get $var$3
  i64.const 15
  i64.shl
  global.get $assembly/barond/NOT_H_FILE
  i64.and
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 15
   i64.shl
   i64.or
   local.set $var$2
  end
  local.get $var$3
  i64.const 10
  i64.shl
  global.get $assembly/barond/NOT_AB_FILE
  i64.and
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 10
   i64.shl
   i64.or
   local.set $var$2
  end
  local.get $var$3
  i64.const 6
  i64.shl
  global.get $assembly/barond/NOT_HG_FILE
  i64.and
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 6
   i64.shl
   i64.or
   local.set $var$2
  end
  local.get $var$2
 )
 (func $assembly/barond/Barond#maskKingAttacks (param $this i32) (param $square i32) (result i64)
  (local $var$2 i64)
  (local $var$3 i64)
  i64.const 0
  local.set $var$2
  i64.const 0
  local.set $var$3
  local.get $this
  local.get $var$3
  local.get $square
  call $assembly/barond/Barond#setBit
  local.set $var$3
  local.get $var$3
  i64.const 8
  i64.shr_u
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 8
   i64.shr_u
   i64.or
   local.set $var$2
  end
  local.get $var$3
  i64.const 9
  i64.shr_u
  global.get $assembly/barond/NOT_H_FILE
  i64.and
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 9
   i64.shr_u
   i64.or
   local.set $var$2
  end
  local.get $var$3
  i64.const 7
  i64.shr_u
  global.get $assembly/barond/NOT_A_FILE
  i64.and
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 7
   i64.shr_u
   i64.or
   local.set $var$2
  end
  local.get $var$3
  i64.const 1
  i64.shr_u
  global.get $assembly/barond/NOT_H_FILE
  i64.and
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 1
   i64.shr_u
   i64.or
   local.set $var$2
  end
  local.get $var$3
  i64.const 8
  i64.shl
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 8
   i64.shl
   i64.or
   local.set $var$2
  end
  local.get $var$3
  i64.const 9
  i64.shl
  global.get $assembly/barond/NOT_A_FILE
  i64.and
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 9
   i64.shl
   i64.or
   local.set $var$2
  end
  local.get $var$3
  i64.const 7
  i64.shl
  global.get $assembly/barond/NOT_H_FILE
  i64.and
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 7
   i64.shl
   i64.or
   local.set $var$2
  end
  local.get $var$3
  i64.const 1
  i64.shl
  global.get $assembly/barond/NOT_A_FILE
  i64.and
  i64.const 0
  i64.ne
  if
   local.get $var$2
   local.get $var$3
   i64.const 1
   i64.shl
   i64.or
   local.set $var$2
  end
  local.get $var$2
 )
 (func $~lib/array/Array<u64>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<u64>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/array/Array<u64>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/array/Array<u64>#push (param $this i32) (param $value i64) (result i32)
  (local $oldLen i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=12
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 3
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 0
  drop
  local.get $this
  i32.load $0 offset=4
  local.get $oldLen
  i32.const 3
  i32.shl
  i32.add
  local.get $value
  i64.store $0
  local.get $this
  local.get $len
  call $~lib/array/Array<u64>#set:length_
  local.get $len
 )
 (func $~lib/array/Array<~lib/array/Array<u64>>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/array/Array<~lib/array/Array<u64>>#push (param $this i32) (param $value i32) (result i32)
  (local $oldLen i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=12
  local.set $oldLen
  local.get $oldLen
  i32.const 1
  i32.add
  local.set $len
  local.get $this
  local.get $len
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=4
  local.get $oldLen
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
  local.get $this
  local.get $value
  i32.const 1
  call $~lib/rt/itcms/__link
  local.get $this
  local.get $len
  call $~lib/array/Array<~lib/array/Array<u64>>#set:length_
  local.get $len
 )
 (func $assembly/barond/Barond#maskBishopAttacks (param $this i32) (param $square i32) (result i64)
  (local $var$2 i64)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  i64.const 0
  local.set $var$2
  local.get $square
  i32.const 8
  i32.div_s
  local.set $var$3
  local.get $square
  i32.const 8
  i32.rem_s
  local.set $var$4
  local.get $var$3
  i32.const 1
  i32.add
  local.set $var$5
  local.get $var$4
  i32.const 1
  i32.add
  local.set $var$6
  loop $for-loop|0
   local.get $var$5
   i32.const 6
   i32.le_s
   if (result i32)
    local.get $var$6
    i32.const 6
    i32.le_s
   else
    i32.const 0
   end
   local.set $var$7
   local.get $var$7
   if
    local.get $var$2
    global.get $assembly/barond/ONE
    local.get $var$5
    i32.const 8
    i32.mul
    local.get $var$6
    i32.add
    i64.extend_i32_s
    i64.shl
    i64.or
    local.set $var$2
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    local.get $var$6
    i32.const 1
    i32.add
    local.set $var$6
    br $for-loop|0
   end
  end
  local.get $var$3
  i32.const 1
  i32.sub
  local.set $var$6
  local.get $var$4
  i32.const 1
  i32.add
  local.set $var$5
  loop $for-loop|1
   local.get $var$6
   i32.const 1
   i32.ge_s
   if (result i32)
    local.get $var$5
    i32.const 6
    i32.le_s
   else
    i32.const 0
   end
   local.set $var$7
   local.get $var$7
   if
    local.get $var$2
    global.get $assembly/barond/ONE
    local.get $var$6
    i32.const 8
    i32.mul
    local.get $var$5
    i32.add
    i64.extend_i32_s
    i64.shl
    i64.or
    local.set $var$2
    local.get $var$6
    i32.const 1
    i32.sub
    local.set $var$6
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|1
   end
  end
  local.get $var$3
  i32.const 1
  i32.add
  local.set $var$5
  local.get $var$4
  i32.const 1
  i32.sub
  local.set $var$6
  loop $for-loop|2
   local.get $var$5
   i32.const 6
   i32.le_s
   if (result i32)
    local.get $var$6
    i32.const 1
    i32.ge_s
   else
    i32.const 0
   end
   local.set $var$7
   local.get $var$7
   if
    local.get $var$2
    global.get $assembly/barond/ONE
    local.get $var$5
    i32.const 8
    i32.mul
    local.get $var$6
    i32.add
    i64.extend_i32_s
    i64.shl
    i64.or
    local.set $var$2
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    local.get $var$6
    i32.const 1
    i32.sub
    local.set $var$6
    br $for-loop|2
   end
  end
  local.get $var$3
  i32.const 1
  i32.sub
  local.set $var$6
  local.get $var$4
  i32.const 1
  i32.sub
  local.set $var$5
  loop $for-loop|3
   local.get $var$6
   i32.const 1
   i32.ge_s
   if (result i32)
    local.get $var$5
    i32.const 1
    i32.ge_s
   else
    i32.const 0
   end
   local.set $var$7
   local.get $var$7
   if
    local.get $var$2
    global.get $assembly/barond/ONE
    local.get $var$6
    i32.const 8
    i32.mul
    local.get $var$5
    i32.add
    i64.extend_i32_s
    i64.shl
    i64.or
    local.set $var$2
    local.get $var$6
    i32.const 1
    i32.sub
    local.set $var$6
    local.get $var$5
    i32.const 1
    i32.sub
    local.set $var$5
    br $for-loop|3
   end
  end
  local.get $var$2
 )
 (func $assembly/barond/Barond#maskRookAttacks (param $this i32) (param $square i32) (result i64)
  (local $var$2 i64)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  i64.const 0
  local.set $var$2
  local.get $square
  i32.const 8
  i32.div_s
  local.set $var$3
  local.get $square
  i32.const 8
  i32.rem_s
  local.set $var$4
  local.get $var$3
  i32.const 1
  i32.add
  local.set $var$5
  loop $for-loop|0
   local.get $var$5
   i32.const 6
   i32.le_s
   local.set $var$6
   local.get $var$6
   if
    local.get $var$2
    global.get $assembly/barond/ONE
    local.get $var$5
    i32.const 8
    i32.mul
    local.get $var$4
    i32.add
    i64.extend_i32_s
    i64.shl
    i64.or
    local.set $var$2
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
  local.get $var$3
  i32.const 1
  i32.sub
  local.set $var$5
  loop $for-loop|1
   local.get $var$5
   i32.const 1
   i32.ge_s
   local.set $var$6
   local.get $var$6
   if
    local.get $var$2
    global.get $assembly/barond/ONE
    local.get $var$5
    i32.const 8
    i32.mul
    local.get $var$4
    i32.add
    i64.extend_i32_s
    i64.shl
    i64.or
    local.set $var$2
    local.get $var$5
    i32.const 1
    i32.sub
    local.set $var$5
    br $for-loop|1
   end
  end
  local.get $var$4
  i32.const 1
  i32.add
  local.set $var$5
  loop $for-loop|2
   local.get $var$5
   i32.const 6
   i32.le_s
   local.set $var$6
   local.get $var$6
   if
    local.get $var$2
    global.get $assembly/barond/ONE
    local.get $var$3
    i32.const 8
    i32.mul
    local.get $var$5
    i32.add
    i64.extend_i32_s
    i64.shl
    i64.or
    local.set $var$2
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|2
   end
  end
  local.get $var$4
  i32.const 1
  i32.sub
  local.set $var$5
  loop $for-loop|3
   local.get $var$5
   i32.const 1
   i32.ge_s
   local.set $var$6
   local.get $var$6
   if
    local.get $var$2
    global.get $assembly/barond/ONE
    local.get $var$3
    i32.const 8
    i32.mul
    local.get $var$5
    i32.add
    i64.extend_i32_s
    i64.shl
    i64.or
    local.set $var$2
    local.get $var$5
    i32.const 1
    i32.sub
    local.set $var$5
    br $for-loop|3
   end
  end
  local.get $var$2
 )
 (func $~lib/array/Array<u64>#__get (param $this i32) (param $index i32) (result i64)
  (local $value i64)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 4992
   i32.const 5056
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $assembly/barond/Barond#countBits (param $this i32) (param $bitboard i64) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  i32.const 0
  local.set $var$2
  loop $while-continue|0
   local.get $bitboard
   i64.const 0
   i64.ne
   local.set $var$3
   local.get $var$3
   if
    local.get $var$2
    i32.const 1
    i32.add
    local.set $var$2
    local.get $bitboard
    local.get $bitboard
    i64.const 1
    i64.sub
    i64.and
    local.set $bitboard
    br $while-continue|0
   end
  end
  local.get $var$2
 )
 (func $assembly/barond/Barond#getLSB (param $this i32) (param $bitboard i64) (result i32)
  local.get $bitboard
  i64.const 0
  i64.ne
  if
   local.get $this
   local.get $bitboard
   i64.const 0
   local.get $bitboard
   i64.sub
   i64.and
   i64.const 1
   i64.sub
   call $assembly/barond/Barond#countBits
   return
  end
  i32.const -1
 )
 (func $assembly/barond/Barond#popBit (param $this i32) (param $board i64) (param $square i32) (result i64)
  local.get $board
  global.get $assembly/barond/ONE
  local.get $square
  i64.extend_i32_s
  i64.shl
  i64.const -1
  i64.xor
  i64.and
  local.tee $board
 )
 (func $assembly/barond/Barond#setOccupancy (param $this i32) (param $index i32) (param $bitsInMask i32) (param $attackMask i64) (result i64)
  (local $var$4 i64)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  i64.const 0
  local.set $var$4
  i32.const 0
  local.set $var$5
  loop $for-loop|0
   local.get $var$5
   local.get $bitsInMask
   i32.lt_s
   local.set $var$6
   local.get $var$6
   if
    local.get $this
    local.get $attackMask
    call $assembly/barond/Barond#getLSB
    local.set $var$7
    local.get $this
    local.get $attackMask
    local.get $var$7
    call $assembly/barond/Barond#popBit
    local.set $attackMask
    local.get $index
    i32.const 1
    local.get $var$5
    i32.shl
    i32.and
    if
     local.get $var$4
     global.get $assembly/barond/ONE
     local.get $var$7
     i64.extend_i32_s
     i64.shl
     i64.or
     local.set $var$4
    end
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
  local.get $var$4
 )
 (func $assembly/barond/Barond#bishopAttacksOnTheFly (param $this i32) (param $square i32) (param $block i64) (result i64)
  (local $var$3 i64)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  i64.const 0
  local.set $var$3
  local.get $square
  i32.const 8
  i32.div_s
  local.set $var$4
  local.get $square
  i32.const 8
  i32.rem_s
  local.set $var$5
  local.get $var$4
  i32.const 1
  i32.add
  local.set $var$6
  local.get $var$5
  i32.const 1
  i32.add
  local.set $var$7
  block $for-break0
   loop $for-loop|0
    local.get $var$6
    i32.const 7
    i32.le_s
    if (result i32)
     local.get $var$7
     i32.const 7
     i32.le_s
    else
     i32.const 0
    end
    local.set $var$8
    local.get $var$8
    if
     local.get $var$3
     global.get $assembly/barond/ONE
     local.get $var$6
     i32.const 8
     i32.mul
     local.get $var$7
     i32.add
     i64.extend_i32_s
     i64.shl
     i64.or
     local.set $var$3
     global.get $assembly/barond/ONE
     local.get $var$6
     i32.const 8
     i32.mul
     local.get $var$7
     i32.add
     i64.extend_i32_s
     i64.shl
     local.get $block
     i64.and
     i64.const 0
     i64.ne
     if
      br $for-break0
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     local.get $var$7
     i32.const 1
     i32.add
     local.set $var$7
     br $for-loop|0
    end
   end
  end
  local.get $var$4
  i32.const 1
  i32.sub
  local.set $var$7
  local.get $var$5
  i32.const 1
  i32.add
  local.set $var$6
  block $for-break1
   loop $for-loop|1
    local.get $var$7
    i32.const 0
    i32.ge_s
    if (result i32)
     local.get $var$6
     i32.const 7
     i32.le_s
    else
     i32.const 0
    end
    local.set $var$8
    local.get $var$8
    if
     local.get $var$3
     global.get $assembly/barond/ONE
     local.get $var$7
     i32.const 8
     i32.mul
     local.get $var$6
     i32.add
     i64.extend_i32_s
     i64.shl
     i64.or
     local.set $var$3
     global.get $assembly/barond/ONE
     local.get $var$7
     i32.const 8
     i32.mul
     local.get $var$6
     i32.add
     i64.extend_i32_s
     i64.shl
     local.get $block
     i64.and
     i64.const 0
     i64.ne
     if
      br $for-break1
     end
     local.get $var$7
     i32.const 1
     i32.sub
     local.set $var$7
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $for-loop|1
    end
   end
  end
  local.get $var$4
  i32.const 1
  i32.add
  local.set $var$6
  local.get $var$5
  i32.const 1
  i32.sub
  local.set $var$7
  block $for-break2
   loop $for-loop|2
    local.get $var$6
    i32.const 7
    i32.le_s
    if (result i32)
     local.get $var$7
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $var$8
    local.get $var$8
    if
     local.get $var$3
     global.get $assembly/barond/ONE
     local.get $var$6
     i32.const 8
     i32.mul
     local.get $var$7
     i32.add
     i64.extend_i32_s
     i64.shl
     i64.or
     local.set $var$3
     global.get $assembly/barond/ONE
     local.get $var$6
     i32.const 8
     i32.mul
     local.get $var$7
     i32.add
     i64.extend_i32_s
     i64.shl
     local.get $block
     i64.and
     i64.const 0
     i64.ne
     if
      br $for-break2
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     local.get $var$7
     i32.const 1
     i32.sub
     local.set $var$7
     br $for-loop|2
    end
   end
  end
  local.get $var$4
  i32.const 1
  i32.sub
  local.set $var$7
  local.get $var$5
  i32.const 1
  i32.sub
  local.set $var$6
  block $for-break3
   loop $for-loop|3
    local.get $var$7
    i32.const 0
    i32.ge_s
    if (result i32)
     local.get $var$6
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $var$8
    local.get $var$8
    if
     local.get $var$3
     global.get $assembly/barond/ONE
     local.get $var$7
     i32.const 8
     i32.mul
     local.get $var$6
     i32.add
     i64.extend_i32_s
     i64.shl
     i64.or
     local.set $var$3
     global.get $assembly/barond/ONE
     local.get $var$7
     i32.const 8
     i32.mul
     local.get $var$6
     i32.add
     i64.extend_i32_s
     i64.shl
     local.get $block
     i64.and
     i64.const 0
     i64.ne
     if
      br $for-break3
     end
     local.get $var$7
     i32.const 1
     i32.sub
     local.set $var$7
     local.get $var$6
     i32.const 1
     i32.sub
     local.set $var$6
     br $for-loop|3
    end
   end
  end
  local.get $var$3
 )
 (func $assembly/barond/Barond#rookAttacksOnTheFly (param $this i32) (param $square i32) (param $block i64) (result i64)
  (local $var$3 i64)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  i64.const 0
  local.set $var$3
  local.get $square
  i32.const 8
  i32.div_s
  local.set $var$4
  local.get $square
  i32.const 8
  i32.rem_s
  local.set $var$5
  local.get $var$4
  i32.const 1
  i32.add
  local.set $var$6
  block $for-break0
   loop $for-loop|0
    local.get $var$6
    i32.const 7
    i32.le_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$3
     global.get $assembly/barond/ONE
     local.get $var$6
     i32.const 8
     i32.mul
     local.get $var$5
     i32.add
     i64.extend_i32_s
     i64.shl
     i64.or
     local.set $var$3
     global.get $assembly/barond/ONE
     local.get $var$6
     i32.const 8
     i32.mul
     local.get $var$5
     i32.add
     i64.extend_i32_s
     i64.shl
     local.get $block
     i64.and
     i64.const 0
     i64.ne
     if
      br $for-break0
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $for-loop|0
    end
   end
  end
  local.get $var$4
  i32.const 1
  i32.sub
  local.set $var$6
  block $for-break1
   loop $for-loop|1
    local.get $var$6
    i32.const 0
    i32.ge_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$3
     global.get $assembly/barond/ONE
     local.get $var$6
     i32.const 8
     i32.mul
     local.get $var$5
     i32.add
     i64.extend_i32_s
     i64.shl
     i64.or
     local.set $var$3
     global.get $assembly/barond/ONE
     local.get $var$6
     i32.const 8
     i32.mul
     local.get $var$5
     i32.add
     i64.extend_i32_s
     i64.shl
     local.get $block
     i64.and
     i64.const 0
     i64.ne
     if
      br $for-break1
     end
     local.get $var$6
     i32.const 1
     i32.sub
     local.set $var$6
     br $for-loop|1
    end
   end
  end
  local.get $var$5
  i32.const 1
  i32.add
  local.set $var$6
  block $for-break2
   loop $for-loop|2
    local.get $var$6
    i32.const 7
    i32.le_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$3
     global.get $assembly/barond/ONE
     local.get $var$4
     i32.const 8
     i32.mul
     local.get $var$6
     i32.add
     i64.extend_i32_s
     i64.shl
     i64.or
     local.set $var$3
     global.get $assembly/barond/ONE
     local.get $var$4
     i32.const 8
     i32.mul
     local.get $var$6
     i32.add
     i64.extend_i32_s
     i64.shl
     local.get $block
     i64.and
     i64.const 0
     i64.ne
     if
      br $for-break2
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $for-loop|2
    end
   end
  end
  local.get $var$5
  i32.const 1
  i32.sub
  local.set $var$6
  block $for-break3
   loop $for-loop|3
    local.get $var$6
    i32.const 0
    i32.ge_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$3
     global.get $assembly/barond/ONE
     local.get $var$4
     i32.const 8
     i32.mul
     local.get $var$6
     i32.add
     i64.extend_i32_s
     i64.shl
     i64.or
     local.set $var$3
     global.get $assembly/barond/ONE
     local.get $var$4
     i32.const 8
     i32.mul
     local.get $var$6
     i32.add
     i64.extend_i32_s
     i64.shl
     local.get $block
     i64.and
     i64.const 0
     i64.ne
     if
      br $for-break3
     end
     local.get $var$6
     i32.const 1
     i32.sub
     local.set $var$6
     br $for-loop|3
    end
   end
  end
  local.get $var$3
 )
 (func $assembly/barond/Barond#set:whitePawnAttacks (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/barond/Barond#set:blackPawnAttacks (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/barond/Barond#set:knightAttacks (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/barond/Barond#set:kingAttacks (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/barond/Barond#set:bishopMasks (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=16
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/barond/Barond#set:rookMasks (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=20
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $assembly/barond/Barond#set:bishopAttacks (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=24
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/rt/__newBuffer (param $size i32) (param $id i32) (param $data i32) (result i32)
  (local $buffer i32)
  local.get $size
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $buffer
  local.get $data
  if
   local.get $buffer
   local.get $data
   local.get $size
   memory.copy $0 $0
  end
  local.get $buffer
 )
 (func $assembly/barond/Barond#set:rookAttacks (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=28
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#set:actual (param $0 i32) (param $1 i64)
  local.get $0
  local.get $1
  i64.store $0 offset=8
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#set:_not (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64> (param $actual i64) (result i32)
  i32.const 0
  local.get $actual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#constructor
 )
 (func $~lib/map/Map<usize,i32>#set:buckets (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<usize,i32>#set:bucketsMask (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/map/Map<usize,i32>#set:entries (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/map/Map<usize,i32>#set:entriesCapacity (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/map/Map<usize,i32>#set:entriesOffset (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=16
 )
 (func $~lib/map/Map<usize,i32>#set:entriesCount (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=20
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.attachStackTrace (param $id i32)
  local.get $id
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/attachStackTraceToReflectedValue
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.report<u64> (param $actual i64)
  (local $value i32)
  local.get $actual
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<u64>@varargs
  local.set $value
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.attachStackTrace
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<u64> (param $expected i64) (param $negated i32)
  (local $value i32)
  local.get $expected
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<u64>@varargs
  local.set $value
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.attachStackTrace
  local.get $value
  local.get $negated
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/assert/assert (param $condition i32) (param $message i32)
  local.get $condition
  i32.eqz
  if
   local.get $message
   i32.const 5776
   i32.const 2
   i32.const 19
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/clearActual
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.clear
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/clearExpected
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe (param $this i32) (param $expected i64) (param $message i32)
  (local $actual i64)
  (local $equals i32)
  (local $negated i32)
  local.get $this
  i64.load $0 offset=8
  local.set $actual
  i32.const 0
  local.set $equals
  i32.const 0
  drop
  local.get $actual
  local.get $expected
  i64.eq
  local.set $equals
  local.get $this
  i32.load $0
  local.set $negated
  local.get $actual
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.report<u64>
  i32.const 0
  drop
  local.get $expected
  local.get $negated
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<u64>
  local.get $equals
  local.get $negated
  i32.xor
  local.get $message
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.clear
 )
 (func $~lib/array/Array<u64>#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#set:actual (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#set:_not (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32> (param $actual i32) (result i32)
  i32.const 0
  local.get $actual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#constructor
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.report<i32> (param $actual i32)
  (local $value i32)
  local.get $actual
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<i32>@varargs
  local.set $value
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.attachStackTrace
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<i32> (param $expected i32) (param $negated i32)
  (local $value i32)
  local.get $expected
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<i32>@varargs
  local.set $value
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.attachStackTrace
  local.get $value
  local.get $negated
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe (param $this i32) (param $expected i32) (param $message i32)
  (local $actual i32)
  (local $equals i32)
  (local $negated i32)
  local.get $this
  i32.load $0 offset=4
  local.set $actual
  i32.const 0
  local.set $equals
  i32.const 0
  drop
  local.get $actual
  local.get $expected
  i32.eq
  local.set $equals
  local.get $this
  i32.load $0
  local.set $negated
  local.get $actual
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.report<i32>
  i32.const 0
  drop
  local.get $expected
  local.get $negated
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<i32>
  local.get $equals
  local.get $negated
  i32.xor
  local.get $message
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.clear
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#set:actual (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#set:_not (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String> (param $actual i32) (result i32)
  i32.const 0
  local.get $actual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#constructor
 )
 (func $~lib/string/String#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
 )
 (func $~lib/util/string/compareImpl (param $str1 i32) (param $index1 i32) (param $str2 i32) (param $index2 i32) (param $len i32) (result i32)
  (local $ptr1 i32)
  (local $ptr2 i32)
  (local $var$7 i32)
  (local $a i32)
  (local $b i32)
  local.get $str1
  local.get $index1
  i32.const 1
  i32.shl
  i32.add
  local.set $ptr1
  local.get $str2
  local.get $index2
  i32.const 1
  i32.shl
  i32.add
  local.set $ptr2
  i32.const 0
  i32.const 2
  i32.lt_s
  drop
  local.get $len
  i32.const 4
  i32.ge_u
  if (result i32)
   local.get $ptr1
   i32.const 7
   i32.and
   local.get $ptr2
   i32.const 7
   i32.and
   i32.or
   i32.eqz
  else
   i32.const 0
  end
  if
   block $do-break|0
    loop $do-loop|0
     local.get $ptr1
     i64.load $0
     local.get $ptr2
     i64.load $0
     i64.ne
     if
      br $do-break|0
     end
     local.get $ptr1
     i32.const 8
     i32.add
     local.set $ptr1
     local.get $ptr2
     i32.const 8
     i32.add
     local.set $ptr2
     local.get $len
     i32.const 4
     i32.sub
     local.set $len
     local.get $len
     i32.const 4
     i32.ge_u
     br_if $do-loop|0
    end
   end
  end
  loop $while-continue|1
   local.get $len
   local.tee $var$7
   i32.const 1
   i32.sub
   local.set $len
   local.get $var$7
   local.set $var$7
   local.get $var$7
   if
    local.get $ptr1
    i32.load16_u $0
    local.set $a
    local.get $ptr2
    i32.load16_u $0
    local.set $b
    local.get $a
    local.get $b
    i32.ne
    if
     local.get $a
     local.get $b
     i32.sub
     return
    end
    local.get $ptr1
    i32.const 2
    i32.add
    local.set $ptr1
    local.get $ptr2
    i32.const 2
    i32.add
    local.set $ptr2
    br $while-continue|1
   end
  end
  i32.const 0
 )
 (func $~lib/string/String.__eq (param $left i32) (param $right i32) (result i32)
  (local $leftLength i32)
  local.get $left
  local.get $right
  i32.eq
  if
   i32.const 1
   return
  end
  local.get $left
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $right
   i32.const 0
   i32.eq
  end
  if
   i32.const 0
   return
  end
  local.get $left
  call $~lib/string/String#get:length
  local.set $leftLength
  local.get $leftLength
  local.get $right
  call $~lib/string/String#get:length
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $left
  i32.const 0
  local.get $right
  i32.const 0
  local.get $leftLength
  call $~lib/util/string/compareImpl
  i32.eqz
 )
 (func $~lib/util/hash/HASH<usize> (param $key i32) (result i32)
  (local $var$1 i32)
  (local $var$2 i32)
  (local $var$3 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 4
  i32.const 4
  i32.le_u
  drop
  local.get $key
  local.set $var$2
  i32.const 4
  local.set $var$1
  i32.const 0
  i32.const 374761393
  i32.add
  local.get $var$1
  i32.add
  local.set $var$3
  local.get $var$3
  local.get $var$2
  i32.const -1028477379
  i32.mul
  i32.add
  local.set $var$3
  local.get $var$3
  i32.const 17
  i32.rotl
  i32.const 668265263
  i32.mul
  local.set $var$3
  local.get $var$3
  local.get $var$3
  i32.const 15
  i32.shr_u
  i32.xor
  local.set $var$3
  local.get $var$3
  i32.const -2048144777
  i32.mul
  local.set $var$3
  local.get $var$3
  local.get $var$3
  i32.const 13
  i32.shr_u
  i32.xor
  local.set $var$3
  local.get $var$3
  i32.const -1028477379
  i32.mul
  local.set $var$3
  local.get $var$3
  local.get $var$3
  i32.const 16
  i32.shr_u
  i32.xor
  local.set $var$3
  local.get $var$3
  return
 )
 (func $~lib/map/Map<usize,i32>#find (param $this i32) (param $key i32) (param $hashCode i32) (result i32)
  (local $entry i32)
  (local $var$4 i32)
  (local $taggedNext i32)
  local.get $this
  i32.load $0
  local.get $hashCode
  local.get $this
  i32.load $0 offset=4
  i32.and
  i32.const 4
  i32.mul
  i32.add
  i32.load $0
  local.set $entry
  loop $while-continue|0
   local.get $entry
   local.set $var$4
   local.get $var$4
   if
    local.get $entry
    i32.load $0 offset=8
    local.set $taggedNext
    local.get $taggedNext
    i32.const 1
    i32.and
    i32.eqz
    if (result i32)
     local.get $entry
     i32.load $0
     local.get $key
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $entry
     return
    end
    local.get $taggedNext
    i32.const 1
    i32.const -1
    i32.xor
    i32.and
    local.set $entry
    br $while-continue|0
   end
  end
  i32.const 0
 )
 (func $~lib/map/Map<usize,i32>#has (param $this i32) (param $key i32) (result i32)
  local.get $this
  local.get $key
  local.get $key
  call $~lib/util/hash/HASH<usize>
  call $~lib/map/Map<usize,i32>#find
  i32.const 0
  i32.ne
 )
 (func $~lib/map/Map<usize,i32>#get (param $this i32) (param $key i32) (result i32)
  (local $entry i32)
  local.get $this
  local.get $key
  local.get $key
  call $~lib/util/hash/HASH<usize>
  call $~lib/map/Map<usize,i32>#find
  local.set $entry
  local.get $entry
  i32.eqz
  if
   i32.const 8400
   i32.const 8464
   i32.const 105
   i32.const 17
   call $~lib/builtins/abort
   unreachable
  end
  local.get $entry
  i32.load $0 offset=4
 )
 (func $~lib/map/MapEntry<usize,i32>#set:value (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/map/MapEntry<usize,i32>#set:key (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/map/MapEntry<usize,i32>#set:taggedNext (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/map/Map<usize,i32>#rehash (param $this i32) (param $newBucketsMask i32)
  (local $newBucketsCapacity i32)
  (local $newBuckets i32)
  (local $newEntriesCapacity i32)
  (local $newEntries i32)
  (local $oldPtr i32)
  (local $oldEnd i32)
  (local $newPtr i32)
  (local $var$9 i32)
  (local $oldEntry i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $var$13 i32)
  (local $var$14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $newBucketsMask
  i32.const 1
  i32.add
  local.set $newBucketsCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newBucketsCapacity
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newBuckets
  i32.store $0
  local.get $newBucketsCapacity
  i32.const 8
  i32.mul
  i32.const 3
  i32.div_s
  local.set $newEntriesCapacity
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $newEntriesCapacity
  i32.const 12
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $newEntries
  i32.store $0 offset=4
  local.get $this
  i32.load $0 offset=8
  local.set $oldPtr
  local.get $oldPtr
  local.get $this
  i32.load $0 offset=16
  i32.const 12
  i32.mul
  i32.add
  local.set $oldEnd
  local.get $newEntries
  local.set $newPtr
  loop $while-continue|0
   local.get $oldPtr
   local.get $oldEnd
   i32.ne
   local.set $var$9
   local.get $var$9
   if
    local.get $oldPtr
    local.set $oldEntry
    local.get $oldEntry
    i32.load $0 offset=8
    i32.const 1
    i32.and
    i32.eqz
    if
     local.get $newPtr
     local.set $var$11
     local.get $oldEntry
     i32.load $0
     local.set $var$12
     local.get $var$11
     local.get $var$12
     call $~lib/map/MapEntry<usize,i32>#set:key
     local.get $var$11
     local.get $oldEntry
     i32.load $0 offset=4
     call $~lib/map/MapEntry<usize,i32>#set:value
     local.get $var$12
     call $~lib/util/hash/HASH<usize>
     local.get $newBucketsMask
     i32.and
     local.set $var$13
     local.get $newBuckets
     local.get $var$13
     i32.const 4
     i32.mul
     i32.add
     local.set $var$14
     local.get $var$11
     local.get $var$14
     i32.load $0
     call $~lib/map/MapEntry<usize,i32>#set:taggedNext
     local.get $var$14
     local.get $newPtr
     i32.store $0
     local.get $newPtr
     i32.const 12
     i32.add
     local.set $newPtr
    end
    local.get $oldPtr
    i32.const 12
    i32.add
    local.set $oldPtr
    br $while-continue|0
   end
  end
  local.get $this
  local.get $newBuckets
  call $~lib/map/Map<usize,i32>#set:buckets
  local.get $this
  local.get $newBucketsMask
  call $~lib/map/Map<usize,i32>#set:bucketsMask
  local.get $this
  local.get $newEntries
  call $~lib/map/Map<usize,i32>#set:entries
  local.get $this
  local.get $newEntriesCapacity
  call $~lib/map/Map<usize,i32>#set:entriesCapacity
  local.get $this
  local.get $this
  i32.load $0 offset=20
  call $~lib/map/Map<usize,i32>#set:entriesOffset
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.report<~lib/string/String> (param $actual i32)
  (local $value i32)
  local.get $actual
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>@varargs
  local.set $value
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.attachStackTrace
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/reportActualReflectedValue
 )
 (func $~lib/array/Array<usize>#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/string/String> (param $left i32) (param $right i32) (param $stack i32) (param $cache i32) (result i32)
  i32.const 1
  drop
  local.get $left
  local.get $right
  i32.eq
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH
   return
  end
  i32.const 0
  drop
  local.get $left
  local.get $right
  call $~lib/string/String.__eq
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH
   return
  end
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $left
  i32.const 0
  i32.eq
  local.get $right
  i32.const 0
  i32.eq
  i32.xor
  if
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.FAILED_MATCH
   return
  end
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  i32.const 0
  drop
  local.get $left
  local.get $right
  local.get $stack
  local.get $cache
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/string/String>
  return
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<~lib/string/String> (param $expected i32) (param $negated i32)
  (local $value i32)
  local.get $expected
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>@varargs
  local.set $value
  local.get $value
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.attachStackTrace
  local.get $value
  local.get $negated
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/reportExpectedReflectedValue
 )
 (func $start:node_modules/@as-pect/assembly/assembly/internal/noOp~anonymous|0
  nop
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/call/__call (param $func i32)
  i32.const 0
  global.set $~argumentsLength
  local.get $func
  i32.load $0
  call_indirect $0 (type $none_=>_none)
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/log/__ignoreLogs (param $value i32)
  local.get $value
  i32.const 0
  i32.ne
  global.set $node_modules/@as-pect/assembly/assembly/internal/log/ignoreLogs
 )
 (func $~lib/rt/itcms/__pin (param $ptr i32) (result i32)
  (local $var$1 i32)
  local.get $ptr
  if
   local.get $ptr
   i32.const 20
   i32.sub
   local.set $var$1
   local.get $var$1
   call $~lib/rt/itcms/Object#get:color
   i32.const 3
   i32.eq
   if
    i32.const 14320
    i32.const 5216
    i32.const 337
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.get $var$1
   call $~lib/rt/itcms/Object#unlink
   local.get $var$1
   global.get $~lib/rt/itcms/pinSpace
   i32.const 3
   call $~lib/rt/itcms/Object#linkTo
  end
  local.get $ptr
 )
 (func $~lib/rt/itcms/__unpin (param $ptr i32)
  (local $obj i32)
  local.get $ptr
  i32.eqz
  if
   return
  end
  local.get $ptr
  i32.const 20
  i32.sub
  local.set $obj
  local.get $obj
  call $~lib/rt/itcms/Object#get:color
  i32.const 3
  i32.ne
  if
   i32.const 14384
   i32.const 5216
   i32.const 351
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/state
  i32.const 1
  i32.eq
  if
   local.get $obj
   call $~lib/rt/itcms/Object#makeGray
  else
   local.get $obj
   call $~lib/rt/itcms/Object#unlink
   local.get $obj
   global.get $~lib/rt/itcms/fromSpace
   global.get $~lib/rt/itcms/white
   call $~lib/rt/itcms/Object#linkTo
  end
 )
 (func $~lib/rt/itcms/__collect
  (local $var$0 i32)
  i32.const 0
  drop
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    i32.const 0
    i32.ne
    local.set $var$0
    local.get $var$0
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.ne
   local.set $var$0
   local.get $var$0
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i32.const 200
  i64.extend_i32_u
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
  i32.const 0
  drop
 )
 (func $~lib/rt/__visit_globals (param $0 i32)
  (local $1 i32)
  i32.const 4992
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 5104
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 5488
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 8400
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 5152
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 14320
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 14384
  local.get $0
  call $~lib/rt/itcms/__visit
  global.get $assembly/barond/BISHOP_MAGIC_NUMBERS
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/barond/ROOK_MAGIC_NUMBERS
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/barond/BISHOP_RELEVANT_BITS
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/barond/ROOK_RELEVANT_BITS
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/barond/SQ_TO_COORD
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<u64>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u64>#__visit
 )
 (func $~lib/array/Array<~lib/string/String>#__visit (param $this i32) (param $cookie i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=4
  local.set $var$2
  local.get $var$2
  local.get $this
  i32.load $0 offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $var$3
  loop $while-continue|0
   local.get $var$2
   local.get $var$3
   i32.lt_u
   local.set $var$4
   local.get $var$4
   if
    local.get $var$2
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $var$2
    i32.const 4
    i32.add
    local.set $var$2
    br $while-continue|0
   end
  end
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#__visit
 )
 (func $assembly/barond/Barond~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=8
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=16
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=20
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=24
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
  local.get $0
  i32.load $0 offset=28
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<~lib/array/Array<u64>>#__visit (param $this i32) (param $cookie i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $val i32)
  i32.const 1
  drop
  local.get $this
  i32.load $0 offset=4
  local.set $var$2
  local.get $var$2
  local.get $this
  i32.load $0 offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $var$3
  loop $while-continue|0
   local.get $var$2
   local.get $var$3
   i32.lt_u
   local.set $var$4
   local.get $var$4
   if
    local.get $var$2
    i32.load $0
    local.set $val
    local.get $val
    if
     local.get $val
     local.get $cookie
     call $~lib/rt/itcms/__visit
    end
    local.get $var$2
    i32.const 4
    i32.add
    local.set $var$2
    br $while-continue|0
   end
  end
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/array/Array<u64>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<u64>>#__visit
 )
 (func $~lib/array/Array<i32>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#__visit
 )
 (func $~lib/map/Map<usize,i32>#__visit (param $this i32) (param $cookie i32)
  (local $entries i32)
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
  local.get $this
  i32.load $0 offset=8
  local.set $entries
  i32.const 0
  drop
  local.get $entries
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/map/Map<usize,i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/map/Map<usize,i32>#__visit
 )
 (func $~lib/function/Function<%28%29=>void>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28%29=>void>#__visit
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.load $0 offset=4
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<usize>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<usize>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<usize>#__visit
 )
 (func $~lib/rt/__visit_members (param $0 i32) (param $1 i32)
  block $invalid
   block $~lib/array/Array<usize>
    block $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>
     block $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>
      block $~lib/function/Function<%28%29=>void>
       block $~lib/map/Map<usize,i32>
        block $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>
         block $~lib/array/Array<i32>
          block $~lib/array/Array<~lib/array/Array<u64>>
           block $assembly/barond/Barond
            block $~lib/array/Array<~lib/string/String>
             block $~lib/array/Array<u64>
              block $~lib/arraybuffer/ArrayBufferView
               block $~lib/string/String
                block $~lib/arraybuffer/ArrayBuffer
                 local.get $0
                 i32.const 8
                 i32.sub
                 i32.load $0
                 br_table $~lib/arraybuffer/ArrayBuffer $~lib/string/String $~lib/arraybuffer/ArrayBufferView $~lib/array/Array<u64> $~lib/array/Array<~lib/string/String> $assembly/barond/Barond $~lib/array/Array<~lib/array/Array<u64>> $~lib/array/Array<i32> $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64> $~lib/map/Map<usize,i32> $~lib/function/Function<%28%29=>void> $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32> $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String> $~lib/array/Array<usize> $invalid
                end
                return
               end
               return
              end
              local.get $0
              local.get $1
              call $~lib/arraybuffer/ArrayBufferView~visit
              return
             end
             local.get $0
             local.get $1
             call $~lib/array/Array<u64>~visit
             return
            end
            local.get $0
            local.get $1
            call $~lib/array/Array<~lib/string/String>~visit
            return
           end
           local.get $0
           local.get $1
           call $assembly/barond/Barond~visit
           return
          end
          local.get $0
          local.get $1
          call $~lib/array/Array<~lib/array/Array<u64>>~visit
          return
         end
         local.get $0
         local.get $1
         call $~lib/array/Array<i32>~visit
         return
        end
        return
       end
       local.get $0
       local.get $1
       call $~lib/map/Map<usize,i32>~visit
       return
      end
      local.get $0
      local.get $1
      call $~lib/function/Function<%28%29=>void>~visit
      return
     end
     return
    end
    local.get $0
    local.get $1
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>~visit
    return
   end
   local.get $0
   local.get $1
   call $~lib/array/Array<usize>~visit
   return
  end
  unreachable
 )
 (func $~start
  global.get $~started
  if
   return
  end
  i32.const 1
  global.set $~started
  call $start:assembly/__tests__/barond.spec
 )
 (func $~stack_check
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__data_end
  i32.lt_s
  if
   i32.const 30960
   i32.const 31008
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $assembly/barond/Barond#initLeapersAttacks (param $this i32)
  (local $var$1 i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  local.set $var$1
  loop $for-loop|0
   local.get $var$1
   i32.const 64
   i32.lt_s
   local.set $var$2
   local.get $var$2
   if
    local.get $var$1
    local.set $var$3
    local.get $this
    i32.load $0
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $var$1
    local.get $this
    i32.const 0
    local.get $var$3
    call $assembly/barond/Barond#maskPawnAttacks
    call $~lib/array/Array<u64>#__set
    local.get $this
    i32.load $0 offset=4
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $var$1
    local.get $this
    i32.const 1
    local.get $var$3
    call $assembly/barond/Barond#maskPawnAttacks
    call $~lib/array/Array<u64>#__set
    local.get $this
    i32.load $0 offset=8
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $var$1
    local.get $this
    local.get $var$3
    call $assembly/barond/Barond#maskKnightAttacks
    call $~lib/array/Array<u64>#__set
    local.get $this
    i32.load $0 offset=12
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0
    local.get $4
    local.get $var$1
    local.get $this
    local.get $var$3
    call $assembly/barond/Barond#maskKingAttacks
    call $~lib/array/Array<u64>#__set
    local.get $var$1
    i32.const 1
    i32.add
    local.set $var$1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/barond/Barond#initSlidersAttacks (param $this i32) (param $bishop i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i64)
  (local $var$9 i64)
  (local $var$10 i64)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  i32.const 0
  local.set $var$2
  loop $for-loop|0
   local.get $var$2
   i32.const 64
   i32.lt_s
   local.set $var$3
   local.get $var$3
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 512
    call $~lib/array/Array<u64>#constructor
    local.tee $var$4
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 4096
    call $~lib/array/Array<u64>#constructor
    local.tee $var$5
    i32.store $0 offset=4
    local.get $this
    i32.load $0 offset=16
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=8
    local.get $11
    i64.const 0
    call $~lib/array/Array<u64>#push
    drop
    local.get $this
    i32.load $0 offset=20
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=8
    local.get $11
    i64.const 0
    call $~lib/array/Array<u64>#push
    drop
    i32.const 0
    local.set $var$6
    loop $for-loop|1
     local.get $var$6
     i32.const 512
     i32.lt_s
     local.set $var$7
     local.get $var$7
     if
      local.get $var$4
      i64.const 0
      call $~lib/array/Array<u64>#push
      drop
      local.get $var$6
      i32.const 1
      i32.add
      local.set $var$6
      br $for-loop|1
     end
    end
    local.get $this
    i32.load $0 offset=24
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=8
    local.get $11
    local.get $var$4
    call $~lib/array/Array<~lib/array/Array<u64>>#push
    drop
    i32.const 0
    local.set $var$6
    loop $for-loop|2
     local.get $var$6
     i32.const 4096
     i32.lt_s
     local.set $var$7
     local.get $var$7
     if
      local.get $var$5
      i64.const 0
      call $~lib/array/Array<u64>#push
      drop
      local.get $var$6
      i32.const 1
      i32.add
      local.set $var$6
      br $for-loop|2
     end
    end
    local.get $this
    i32.load $0 offset=28
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=8
    local.get $11
    local.get $var$5
    call $~lib/array/Array<~lib/array/Array<u64>>#push
    drop
    local.get $var$2
    i32.const 1
    i32.add
    local.set $var$2
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $var$2
  loop $for-loop|3
   local.get $var$2
   i32.const 64
   i32.lt_s
   local.set $var$3
   local.get $var$3
   if
    local.get $this
    i32.load $0 offset=16
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=8
    local.get $11
    local.get $var$2
    local.get $this
    local.get $var$2
    call $assembly/barond/Barond#maskBishopAttacks
    call $~lib/array/Array<u64>#__set
    local.get $this
    i32.load $0 offset=20
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store $0 offset=8
    local.get $11
    local.get $var$2
    local.get $this
    local.get $var$2
    call $assembly/barond/Barond#maskRookAttacks
    call $~lib/array/Array<u64>#__set
    local.get $bishop
    i32.const 1
    i32.eq
    if (result i64)
     local.get $this
     i32.load $0 offset=16
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store $0 offset=8
     local.get $11
     local.get $var$2
     call $~lib/array/Array<u64>#__get
    else
     local.get $this
     i32.load $0 offset=20
     local.set $11
     global.get $~lib/memory/__stack_pointer
     local.get $11
     i32.store $0 offset=8
     local.get $11
     local.get $var$2
     call $~lib/array/Array<u64>#__get
    end
    local.set $var$8
    local.get $this
    local.get $var$8
    call $assembly/barond/Barond#countBits
    local.set $var$5
    i32.const 1
    local.get $var$5
    i32.shl
    local.set $var$4
    i32.const 0
    local.set $var$6
    loop $for-loop|4
     local.get $var$6
     local.get $var$4
     i32.lt_s
     local.set $var$7
     local.get $var$7
     if
      local.get $bishop
      i32.const 1
      i32.eq
      if
       local.get $this
       local.get $var$6
       local.get $var$5
       local.get $var$8
       call $assembly/barond/Barond#setOccupancy
       local.set $var$9
       local.get $var$9
       global.get $assembly/barond/BISHOP_MAGIC_NUMBERS
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=8
       local.get $11
       local.get $var$2
       call $~lib/array/Array<u64>#__get
       i64.mul
       i64.const 64
       global.get $assembly/barond/BISHOP_RELEVANT_BITS
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=8
       local.get $11
       local.get $var$2
       call $~lib/array/Array<u64>#__get
       i64.sub
       i64.shr_u
       local.set $var$10
       local.get $this
       i32.load $0 offset=24
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=12
       local.get $11
       local.get $var$2
       call $~lib/array/Array<~lib/array/Array<u64>>#__get
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=8
       local.get $11
       local.get $var$10
       i32.wrap_i64
       local.get $this
       local.get $var$2
       local.get $var$9
       call $assembly/barond/Barond#bishopAttacksOnTheFly
       call $~lib/array/Array<u64>#__set
      else
       local.get $this
       local.get $var$6
       local.get $var$5
       local.get $var$8
       call $assembly/barond/Barond#setOccupancy
       local.set $var$10
       local.get $var$10
       global.get $assembly/barond/ROOK_MAGIC_NUMBERS
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=8
       local.get $11
       local.get $var$2
       call $~lib/array/Array<u64>#__get
       i64.mul
       i64.const 64
       global.get $assembly/barond/ROOK_RELEVANT_BITS
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=8
       local.get $11
       local.get $var$2
       call $~lib/array/Array<u64>#__get
       i64.sub
       i64.shr_u
       local.set $var$9
       local.get $this
       i32.load $0 offset=28
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=12
       local.get $11
       local.get $var$2
       call $~lib/array/Array<~lib/array/Array<u64>>#__get
       local.set $11
       global.get $~lib/memory/__stack_pointer
       local.get $11
       i32.store $0 offset=8
       local.get $11
       local.get $var$9
       i32.wrap_i64
       local.get $this
       local.get $var$2
       local.get $var$10
       call $assembly/barond/Barond#rookAttacksOnTheFly
       call $~lib/array/Array<u64>#__set
      end
      local.get $var$6
      i32.const 1
      i32.add
      local.set $var$6
      br $for-loop|4
     end
    end
    local.get $var$2
    i32.const 1
    i32.add
    local.set $var$2
    br $for-loop|3
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $assembly/barond/Barond#getRookAttacks (param $this i32) (param $square i32) (param $occupancy i64) (result i64)
  (local $3 i32)
  (local $4 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $occupancy
  local.get $this
  i32.load $0 offset=20
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $square
  call $~lib/array/Array<u64>#__get
  i64.and
  local.set $occupancy
  local.get $occupancy
  global.get $assembly/barond/ROOK_MAGIC_NUMBERS
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $square
  call $~lib/array/Array<u64>#__get
  i64.mul
  local.set $occupancy
  local.get $occupancy
  i64.const 64
  global.get $assembly/barond/ROOK_RELEVANT_BITS
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $square
  call $~lib/array/Array<u64>#__get
  i64.sub
  i64.shr_u
  local.set $occupancy
  local.get $this
  i32.load $0 offset=28
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $square
  call $~lib/array/Array<~lib/array/Array<u64>>#__get
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $occupancy
  i32.wrap_i64
  call $~lib/array/Array<u64>#__get
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<u64> (param $value i64) (param $seen i32) (result i32)
  (local $var$2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  drop
  i32.const 3
  i32.const 3
  i32.eq
  drop
  i32.const 1
  drop
  i32.const 0
  i32.const 8
  i32.const 7
  i32.const 5680
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $value
  i64.const 4294967295
  i64.and
  i32.wrap_i64
  local.get $value
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedLong
  local.set $var$2
  local.get $var$2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $assembly/barond/Barond#getBishopAttacks (param $this i32) (param $square i32) (param $occupancy i64) (result i64)
  (local $3 i32)
  (local $4 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $occupancy
  local.get $this
  i32.load $0 offset=16
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $square
  call $~lib/array/Array<u64>#__get
  i64.and
  local.set $occupancy
  local.get $occupancy
  global.get $assembly/barond/BISHOP_MAGIC_NUMBERS
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $square
  call $~lib/array/Array<u64>#__get
  i64.mul
  local.set $occupancy
  local.get $occupancy
  i64.const 64
  global.get $assembly/barond/BISHOP_RELEVANT_BITS
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $square
  call $~lib/array/Array<u64>#__get
  i64.sub
  i64.shr_u
  local.set $occupancy
  local.get $this
  i32.load $0 offset=24
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  local.get $square
  call $~lib/array/Array<~lib/array/Array<u64>>#__get
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $occupancy
  i32.wrap_i64
  call $~lib/array/Array<u64>#__get
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|0
  (local $barond i32)
  (local $block i64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/barond/Barond#constructor
  local.tee $barond
  i32.store $0
  i64.const 0
  local.set $block
  local.get $barond
  local.get $block
  i32.const 26
  call $assembly/barond/Barond#setBit
  local.set $block
  local.get $barond
  local.get $block
  i32.const 53
  call $assembly/barond/Barond#setBit
  local.set $block
  local.get $barond
  local.get $block
  i32.const 14
  call $assembly/barond/Barond#setBit
  local.set $block
  local.get $barond
  local.get $block
  i32.const 49
  call $assembly/barond/Barond#setBit
  local.set $block
  local.get $barond
  local.get $block
  i32.const 30
  call $assembly/barond/Barond#setBit
  local.set $block
  local.get $barond
  local.get $block
  i32.const 52
  call $assembly/barond/Barond#setBit
  local.set $block
  local.get $barond
  local.get $block
  i32.const 12
  call $assembly/barond/Barond#setBit
  local.set $block
  i64.const 4521262345883648
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $barond
  i32.const 28
  local.get $block
  call $assembly/barond/Barond#getRookAttacks
  i32.const 5920
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
  i64.const 9592139778375680
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $barond
  i32.const 35
  local.get $block
  call $assembly/barond/Barond#getBishopAttacks
  i32.const 5920
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|1
  (local $barond i32)
  (local $var$1 i32)
  (local $expected i32)
  (local $var$3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/barond/Barond#constructor
  local.tee $barond
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.const 3
  i32.const 3
  i32.const 6064
  call $~lib/rt/__newArray
  local.tee $expected
  i32.store $0 offset=4
  i32.const 0
  local.set $var$1
  loop $for-loop|0
   local.get $var$1
   i32.const 64
   i32.lt_s
   local.set $var$3
   local.get $var$3
   if
    local.get $expected
    local.get $var$1
    call $~lib/array/Array<u64>#__get
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    local.get $4
    local.get $barond
    local.get $var$1
    i64.const 0
    call $assembly/barond/Barond#getRookAttacks
    i32.const 5920
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
    local.get $var$1
    i32.const 1
    i32.add
    local.set $var$1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|2
  (local $barond i32)
  (local $var$1 i32)
  (local $expected i32)
  (local $var$3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/barond/Barond#constructor
  local.tee $barond
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.const 3
  i32.const 3
  i32.const 6736
  call $~lib/rt/__newArray
  local.tee $expected
  i32.store $0 offset=4
  i32.const 0
  local.set $var$1
  loop $for-loop|0
   local.get $var$1
   i32.const 64
   i32.lt_s
   local.set $var$3
   local.get $var$3
   if
    local.get $expected
    local.get $var$1
    call $~lib/array/Array<u64>#__get
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    local.get $4
    local.get $barond
    local.get $var$1
    i64.const 0
    call $assembly/barond/Barond#getBishopAttacks
    i32.const 5920
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
    local.get $var$1
    i32.const 1
    i32.add
    local.set $var$1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|3
  (local $barond i32)
  (local $attackMask i64)
  (local $var$2 i32)
  (local $expected i32)
  (local $var$4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/barond/Barond#constructor
  local.tee $barond
  i32.store $0
  local.get $barond
  i32.const 35
  call $assembly/barond/Barond#maskBishopAttacks
  local.set $attackMask
  global.get $~lib/memory/__stack_pointer
  i32.const 100
  i32.const 3
  i32.const 3
  i32.const 7392
  call $~lib/rt/__newArray
  local.tee $expected
  i32.store $0 offset=4
  i32.const 0
  local.set $var$2
  loop $for-loop|0
   local.get $var$2
   local.get $expected
   call $~lib/array/Array<u64>#get:length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $expected
    local.get $var$2
    call $~lib/array/Array<u64>#__get
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    local.get $barond
    local.get $var$2
    local.get $barond
    local.get $attackMask
    call $assembly/barond/Barond#countBits
    local.get $attackMask
    call $assembly/barond/Barond#setOccupancy
    i32.const 5920
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    local.get $5
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
    local.get $var$2
    i32.const 1
    i32.add
    local.set $var$2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<i32> (param $value i32) (param $seen i32) (result i32)
  (local $var$2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 0
  drop
  i32.const 2
  i32.const 3
  i32.eq
  drop
  i32.const 1
  i32.const 4
  i32.const 7
  i32.const 8336
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $value
  f64.convert_i32_s
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedNumber
  local.set $var$2
  local.get $var$2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String> (param $value i32) (param $seen i32) (result i32)
  (local $var$2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  i32.const 1
  drop
  local.get $value
  i32.const 0
  i32.eq
  if
   i32.const 1
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 0
   i32.const 4
   i32.const 1
   i32.const 1
   i32.const 8368
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.const 0
   i32.const 0
   i32.const 1
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 0
  i32.eqz
  drop
  local.get $seen
  local.get $value
  call $~lib/map/Map<usize,i32>#has
  if
   local.get $seen
   local.get $value
   call $~lib/map/Map<usize,i32>#get
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  i32.const 0
  i32.const 0
  i32.const 0
  i32.const 0
  local.get $value
  i32.const 0
  local.get $value
  call $~lib/string/String#get:length
  i32.const 2
  i32.const 1
  i32.const 8368
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  local.get $value
  i32.const 0
  i32.const 1
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/createReflectedValue
  local.set $var$2
  local.get $seen
  local.get $value
  local.get $var$2
  call $~lib/map/Map<usize,i32>#set
  drop
  local.get $var$2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
  return
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/referencesEqual<~lib/string/String> (param $left i32) (param $right i32) (param $stack i32) (param $cache i32) (result i32)
  (local $a i32)
  (local $b i32)
  (local $cacheLength i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $left
  local.set $a
  local.get $right
  local.set $b
  local.get $cache
  call $~lib/array/Array<usize>#get:length
  local.set $cacheLength
  local.get $cacheLength
  i32.const 1
  i32.and
  i32.const 0
  i32.eq
  i32.const 8512
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0
  local.get $7
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  i32.const 1
  drop
  global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.FAILED_MATCH
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
  return
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe (param $this i32) (param $expected i32) (param $message i32)
  (local $actual i32)
  (local $equals i32)
  (local $negated i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $this
  i32.load $0 offset=4
  local.tee $actual
  i32.store $0
  i32.const 0
  local.set $equals
  i32.const 1
  drop
  i32.const 0
  drop
  local.get $actual
  local.get $expected
  call $~lib/string/String.__eq
  local.set $equals
  local.get $this
  i32.load $0
  local.set $negated
  local.get $actual
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.report<~lib/string/String>
  i32.const 0
  i32.eqz
  drop
  local.get $negated
  i32.eqz
  if (result i32)
   local.get $actual
   i32.const 0
   i32.ne
  else
   i32.const 0
  end
  if (result i32)
   local.get $expected
   i32.const 0
   i32.ne
  else
   i32.const 0
  end
  if (result i32)
   local.get $actual
   local.get $expected
   i32.const 0
   i32.const 2
   global.set $~argumentsLength
   i32.const 0
   call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/string/String>@varargs
   global.get $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.SUCCESSFUL_MATCH
   i32.eq
  else
   i32.const 0
  end
  if
   i32.const 8656
   local.set $6
   global.get $~lib/memory/__stack_pointer
   local.get $6
   i32.store $0 offset=4
   local.get $6
   i32.const 0
   call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<~lib/string/String>
  else
   local.get $expected
   local.get $negated
   call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.report<~lib/string/String>
  end
  local.get $equals
  local.get $negated
  i32.xor
  local.get $message
  call $node_modules/@as-pect/assembly/assembly/internal/assert/assert
  call $node_modules/@as-pect/assembly/assembly/internal/Actual/Actual.clear
  call $node_modules/@as-pect/assembly/assembly/internal/Expected/Expected.clear
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|4
  (local $barond i32)
  (local $block i64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/barond/Barond#constructor
  local.tee $barond
  i32.store $0
  i64.const 0
  local.set $block
  local.get $barond
  local.get $block
  i32.const 11
  call $assembly/barond/Barond#setBit
  local.set $block
  local.get $barond
  local.get $block
  i32.const 51
  call $assembly/barond/Barond#setBit
  local.set $block
  local.get $barond
  local.get $block
  i32.const 59
  call $assembly/barond/Barond#setBit
  local.set $block
  local.get $barond
  local.get $block
  i32.const 33
  call $assembly/barond/Barond#setBit
  local.set $block
  local.get $barond
  local.get $block
  i32.const 38
  call $assembly/barond/Barond#setBit
  local.set $block
  i32.const 11
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $barond
  local.get $block
  call $assembly/barond/Barond#getLSB
  i32.const 5920
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  i32.const 2752
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<~lib/string/String>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  global.get $assembly/barond/SQ_TO_COORD
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=16
  local.get $2
  local.get $barond
  local.get $block
  call $assembly/barond/Barond#getLSB
  call $~lib/array/Array<~lib/string/String>#__get
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=12
  local.get $2
  i32.const 5920
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|5
  (local $block i64)
  (local $barond i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i64.const 0
  local.set $block
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/barond/Barond#constructor
  local.tee $barond
  i32.store $0
  local.get $barond
  local.get $block
  i32.const 11
  call $assembly/barond/Barond#setBit
  local.set $block
  local.get $barond
  local.get $block
  i32.const 51
  call $assembly/barond/Barond#setBit
  local.set $block
  local.get $barond
  local.get $block
  i32.const 59
  call $assembly/barond/Barond#setBit
  local.set $block
  local.get $barond
  local.get $block
  i32.const 33
  call $assembly/barond/Barond#setBit
  local.set $block
  local.get $barond
  local.get $block
  i32.const 38
  call $assembly/barond/Barond#setBit
  local.set $block
  i32.const 5
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<i32>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $barond
  local.get $block
  call $assembly/barond/Barond#countBits
  i32.const 5920
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#toBe
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|6
  (local $barond i32)
  (local $var$1 i32)
  (local $expected i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/barond/Barond#constructor
  local.tee $barond
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.const 3
  i32.const 3
  i32.const 9024
  call $~lib/rt/__newArray
  local.tee $expected
  i32.store $0 offset=4
  i32.const 0
  local.set $var$1
  loop $for-loop|0
   local.get $var$1
   i32.const 64
   i32.lt_s
   local.set $var$3
   local.get $var$3
   if
    local.get $var$1
    local.set $var$4
    local.get $expected
    local.get $var$1
    call $~lib/array/Array<u64>#__get
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    local.get $barond
    local.get $var$4
    i64.const 0
    call $assembly/barond/Barond#rookAttacksOnTheFly
    i32.const 5920
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    local.get $5
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
    local.get $var$1
    i32.const 1
    i32.add
    local.set $var$1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|7
  (local $barond i32)
  (local $var$1 i32)
  (local $expected i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/barond/Barond#constructor
  local.tee $barond
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.const 3
  i32.const 3
  i32.const 9744
  call $~lib/rt/__newArray
  local.tee $expected
  i32.store $0 offset=4
  i32.const 0
  local.set $var$1
  loop $for-loop|0
   local.get $var$1
   i32.const 64
   i32.lt_s
   local.set $var$3
   local.get $var$3
   if
    local.get $var$1
    local.set $var$4
    local.get $expected
    local.get $var$1
    call $~lib/array/Array<u64>#__get
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    local.get $barond
    local.get $var$4
    i64.const 0
    call $assembly/barond/Barond#bishopAttacksOnTheFly
    i32.const 5920
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    local.get $5
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
    local.get $var$1
    i32.const 1
    i32.add
    local.set $var$1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|8
  (local $barond i32)
  (local $var$1 i32)
  (local $expected i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/barond/Barond#constructor
  local.tee $barond
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.const 3
  i32.const 3
  i32.const 10400
  call $~lib/rt/__newArray
  local.tee $expected
  i32.store $0 offset=4
  i32.const 0
  local.set $var$1
  loop $for-loop|0
   local.get $var$1
   i32.const 64
   i32.lt_s
   local.set $var$3
   local.get $var$3
   if
    local.get $var$1
    local.set $var$4
    local.get $expected
    local.get $var$1
    call $~lib/array/Array<u64>#__get
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    local.get $barond
    local.get $var$4
    call $assembly/barond/Barond#maskRookAttacks
    i32.const 5920
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    local.get $5
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
    local.get $var$1
    i32.const 1
    i32.add
    local.set $var$1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|9
  (local $barond i32)
  (local $var$1 i32)
  (local $expected i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/barond/Barond#constructor
  local.tee $barond
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.const 3
  i32.const 3
  i32.const 11056
  call $~lib/rt/__newArray
  local.tee $expected
  i32.store $0 offset=4
  i32.const 0
  local.set $var$1
  loop $for-loop|0
   local.get $var$1
   i32.const 64
   i32.lt_s
   local.set $var$3
   local.get $var$3
   if
    local.get $var$1
    local.set $var$4
    local.get $expected
    local.get $var$1
    call $~lib/array/Array<u64>#__get
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=8
    local.get $5
    local.get $barond
    local.get $var$4
    call $assembly/barond/Barond#maskBishopAttacks
    i32.const 5920
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store $0 offset=12
    local.get $5
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
    local.get $var$1
    i32.const 1
    i32.add
    local.set $var$1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|10
  (local $barond i32)
  (local $var$1 i32)
  (local $expected i32)
  (local $var$3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/barond/Barond#constructor
  local.tee $barond
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.const 3
  i32.const 3
  i32.const 11712
  call $~lib/rt/__newArray
  local.tee $expected
  i32.store $0 offset=4
  i32.const 0
  local.set $var$1
  loop $for-loop|0
   local.get $var$1
   i32.const 64
   i32.lt_s
   local.set $var$3
   local.get $var$3
   if
    local.get $expected
    local.get $var$1
    call $~lib/array/Array<u64>#__get
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    local.get $4
    local.get $barond
    i32.load $0 offset=12
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    local.get $var$1
    call $~lib/array/Array<u64>#__get
    i32.const 5920
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
    local.get $var$1
    i32.const 1
    i32.add
    local.set $var$1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|11
  (local $barond i32)
  (local $var$1 i32)
  (local $expected i32)
  (local $var$3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/barond/Barond#constructor
  local.tee $barond
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.const 3
  i32.const 3
  i32.const 12368
  call $~lib/rt/__newArray
  local.tee $expected
  i32.store $0 offset=4
  i32.const 0
  local.set $var$1
  loop $for-loop|0
   local.get $var$1
   i32.const 64
   i32.lt_s
   local.set $var$3
   local.get $var$3
   if
    local.get $expected
    local.get $var$1
    call $~lib/array/Array<u64>#__get
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    local.get $4
    local.get $barond
    i32.load $0 offset=8
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    local.get $var$1
    call $~lib/array/Array<u64>#__get
    i32.const 5920
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
    local.get $var$1
    i32.const 1
    i32.add
    local.set $var$1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|12
  (local $barond i32)
  (local $var$1 i32)
  (local $expected i32)
  (local $var$3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/barond/Barond#constructor
  local.tee $barond
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.const 3
  i32.const 3
  i32.const 13024
  call $~lib/rt/__newArray
  local.tee $expected
  i32.store $0 offset=4
  i32.const 0
  local.set $var$1
  loop $for-loop|0
   local.get $var$1
   i32.const 64
   i32.lt_s
   local.set $var$3
   local.get $var$3
   if
    local.get $expected
    local.get $var$1
    call $~lib/array/Array<u64>#__get
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    local.get $4
    local.get $barond
    i32.load $0 offset=4
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    local.get $var$1
    call $~lib/array/Array<u64>#__get
    i32.const 5920
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
    local.get $var$1
    i32.const 1
    i32.add
    local.set $var$1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/barond.spec~anonymous|0~anonymous|13
  (local $barond i32)
  (local $var$1 i32)
  (local $expected i32)
  (local $var$3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $assembly/barond/Barond#constructor
  local.tee $barond
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.const 3
  i32.const 3
  i32.const 13680
  call $~lib/rt/__newArray
  local.tee $expected
  i32.store $0 offset=4
  i32.const 0
  local.set $var$1
  loop $for-loop|0
   local.get $var$1
   i32.const 64
   i32.lt_s
   local.set $var$3
   local.get $var$3
   if
    local.get $expected
    local.get $var$1
    call $~lib/array/Array<u64>#__get
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/expect<u64>
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=8
    local.get $4
    local.get $barond
    i32.load $0
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    local.get $var$1
    call $~lib/array/Array<u64>#__get
    i32.const 5920
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store $0 offset=12
    local.get $4
    call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#toBe
    local.get $var$1
    i32.const 1
    i32.add
    local.set $var$1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/barond.spec~anonymous|0
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  i32.const 4832
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 5952
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 5984
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 6608
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 6640
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 7280
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 7312
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 8224
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 8256
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 8736
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 8768
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 8848
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 8880
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 9568
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 9600
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 10288
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 10320
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 10944
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 10976
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 11600
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 11632
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 12256
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 12288
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 12912
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 12944
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 13568
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  i32.const 13600
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 14224
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/it
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:assembly/__tests__/barond.spec
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  memory.size $0
  i32.const 16
  i32.shl
  global.get $~lib/memory/__heap_base
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 5264
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/pinSpace
  i32.const 5296
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/toSpace
  i32.const 5376
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/fromSpace
  i32.const 4784
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 14256
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/Test/describe
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u64>#constructor (param $this i32) (param $length i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 3
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  i32.const 0
  call $~lib/array/Array<u64>#set:buffer
  local.get $this
  i32.const 0
  call $~lib/array/Array<u64>#set:dataStart
  local.get $this
  i32.const 0
  call $~lib/array/Array<u64>#set:byteLength
  local.get $this
  i32.const 0
  call $~lib/array/Array<u64>#set:length_
  local.get $length
  i32.const 1073741820
  i32.const 3
  i32.shr_u
  i32.gt_u
  if
   i32.const 5104
   i32.const 5056
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $length
  local.tee $var$2
  i32.const 8
  local.tee $var$3
  local.get $var$2
  local.get $var$3
  i32.gt_u
  select
  i32.const 3
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=4
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.get $buffer
  call $~lib/array/Array<u64>#set:buffer
  local.get $this
  local.get $buffer
  call $~lib/array/Array<u64>#set:dataStart
  local.get $this
  local.get $bufferSize
  call $~lib/array/Array<u64>#set:byteLength
  local.get $this
  local.get $length
  call $~lib/array/Array<u64>#set:length_
  local.get $this
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<~lib/array/Array<u64>>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 4992
   i32.const 5056
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 5488
   i32.const 5056
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/rt/__newArray (param $length i32) (param $alignLog2 i32) (param $id i32) (param $data i32) (result i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $array i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  local.get $alignLog2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 0
  local.get $data
  call $~lib/rt/__newBuffer
  local.tee $buffer
  i32.store $0
  i32.const 16
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $array
  local.get $array
  local.get $buffer
  i32.store $0
  local.get $array
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $array
  local.get $buffer
  i32.store $0 offset=4
  local.get $array
  local.get $bufferSize
  i32.store $0 offset=8
  local.get $array
  local.get $length
  i32.store $0 offset=12
  local.get $array
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $assembly/barond/Barond#constructor (param $this i32) (result i32)
  (local $var$1 i32)
  (local $var$2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 5
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  i32.const 0
  i32.const 64
  call $~lib/array/Array<u64>#constructor
  call $assembly/barond/Barond#set:whitePawnAttacks
  local.get $this
  i32.const 0
  i32.const 64
  call $~lib/array/Array<u64>#constructor
  call $assembly/barond/Barond#set:blackPawnAttacks
  local.get $this
  i32.const 0
  i32.const 64
  call $~lib/array/Array<u64>#constructor
  call $assembly/barond/Barond#set:knightAttacks
  local.get $this
  i32.const 0
  i32.const 64
  call $~lib/array/Array<u64>#constructor
  call $assembly/barond/Barond#set:kingAttacks
  local.get $this
  i32.const 0
  i32.const 64
  call $~lib/array/Array<u64>#constructor
  call $assembly/barond/Barond#set:bishopMasks
  local.get $this
  i32.const 0
  i32.const 64
  call $~lib/array/Array<u64>#constructor
  call $assembly/barond/Barond#set:rookMasks
  local.get $this
  i32.const 0
  i32.const 2
  i32.const 6
  i32.const 5616
  call $~lib/rt/__newArray
  call $assembly/barond/Barond#set:bishopAttacks
  local.get $this
  i32.const 0
  i32.const 2
  i32.const 6
  i32.const 5648
  call $~lib/rt/__newArray
  call $assembly/barond/Barond#set:rookAttacks
  local.get $this
  call $assembly/barond/Barond#initLeapersAttacks
  local.get $this
  i32.const 0
  call $assembly/barond/Barond#initSlidersAttacks
  local.get $this
  i32.const 1
  call $assembly/barond/Barond#initSlidersAttacks
  local.get $this
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#constructor (param $this i32) (param $actual i64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 8
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#set:_not
  local.get $this
  i64.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#set:actual
  local.get $this
  local.get $actual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<u64>#set:actual
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $this i32) (param $length i32) (result i32)
  (local $buffer i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 5104
   i32.const 5712
   i32.const 52
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $length
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $buffer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/map/Map<usize,i32>#constructor (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.const 9
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  i32.const 0
  i32.const 4
  i32.const 4
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  call $~lib/map/Map<usize,i32>#set:buckets
  local.get $this
  i32.const 4
  i32.const 1
  i32.sub
  call $~lib/map/Map<usize,i32>#set:bucketsMask
  local.get $this
  i32.const 0
  i32.const 4
  i32.const 12
  i32.mul
  call $~lib/arraybuffer/ArrayBuffer#constructor
  call $~lib/map/Map<usize,i32>#set:entries
  local.get $this
  i32.const 4
  call $~lib/map/Map<usize,i32>#set:entriesCapacity
  local.get $this
  i32.const 0
  call $~lib/map/Map<usize,i32>#set:entriesOffset
  local.get $this
  i32.const 0
  call $~lib/map/Map<usize,i32>#set:entriesCount
  local.get $this
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<u64>@varargs (param $value i64) (param $seen i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/map/Map<usize,i32>#constructor
   local.tee $seen
   i32.store $0
  end
  local.get $value
  local.get $seen
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<u64>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#constructor (param $this i32) (param $actual i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 11
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#set:_not
  local.get $this
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#set:actual
  local.get $this
  local.get $actual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<i32>#set:actual
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<i32>@varargs (param $value i32) (param $seen i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/map/Map<usize,i32>#constructor
   local.tee $seen
   i32.store $0
  end
  local.get $value
  local.get $seen
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<i32>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#constructor (param $this i32) (param $actual i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 12
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#set:_not
  local.get $this
  i32.const 0
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#set:actual
  local.get $this
  local.get $actual
  call $node_modules/@as-pect/assembly/assembly/internal/Expectation/Expectation<~lib/string/String>#set:actual
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<~lib/string/String>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 4992
   i32.const 5056
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $value
  i32.store $0
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $value
  i32.eqz
  if
   i32.const 5488
   i32.const 5056
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/map/Map<usize,i32>#set (param $this i32) (param $key i32) (param $value i32) (result i32)
  (local $hashCode i32)
  (local $entry i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $key
  call $~lib/util/hash/HASH<usize>
  local.set $hashCode
  local.get $this
  local.get $key
  local.get $hashCode
  call $~lib/map/Map<usize,i32>#find
  local.set $entry
  local.get $entry
  if
   local.get $entry
   local.get $value
   call $~lib/map/MapEntry<usize,i32>#set:value
   i32.const 0
   drop
  else
   local.get $this
   i32.load $0 offset=16
   local.get $this
   i32.load $0 offset=12
   i32.eq
   if
    local.get $this
    local.get $this
    i32.load $0 offset=20
    local.get $this
    i32.load $0 offset=12
    i32.const 3
    i32.mul
    i32.const 4
    i32.div_s
    i32.lt_s
    if (result i32)
     local.get $this
     i32.load $0 offset=4
    else
     local.get $this
     i32.load $0 offset=4
     i32.const 1
     i32.shl
     i32.const 1
     i32.or
    end
    call $~lib/map/Map<usize,i32>#rehash
   end
   global.get $~lib/memory/__stack_pointer
   local.get $this
   i32.load $0 offset=8
   local.tee $var$5
   i32.store $0
   local.get $var$5
   local.get $this
   local.get $this
   i32.load $0 offset=16
   local.tee $var$6
   i32.const 1
   i32.add
   call $~lib/map/Map<usize,i32>#set:entriesOffset
   local.get $var$6
   i32.const 12
   i32.mul
   i32.add
   local.set $entry
   local.get $entry
   local.get $key
   call $~lib/map/MapEntry<usize,i32>#set:key
   i32.const 0
   drop
   local.get $entry
   local.get $value
   call $~lib/map/MapEntry<usize,i32>#set:value
   i32.const 0
   drop
   local.get $this
   local.get $this
   i32.load $0 offset=20
   i32.const 1
   i32.add
   call $~lib/map/Map<usize,i32>#set:entriesCount
   local.get $this
   i32.load $0
   local.get $hashCode
   local.get $this
   i32.load $0 offset=4
   i32.and
   i32.const 4
   i32.mul
   i32.add
   local.set $var$6
   local.get $entry
   local.get $var$6
   i32.load $0
   call $~lib/map/MapEntry<usize,i32>#set:taggedNext
   local.get $var$6
   local.get $entry
   i32.store $0
  end
  local.get $this
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>@varargs (param $value i32) (param $seen i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/map/Map<usize,i32>#constructor
   local.tee $seen
   i32.store $0
  end
  local.get $value
  local.get $seen
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.toReflectedValue<~lib/string/String>
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/string/String>@varargs (param $left i32) (param $right i32) (param $stack i32) (param $cache i32) (result i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 2
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 2
    i32.const 13
    i32.const 8592
    call $~lib/rt/__newArray
    local.tee $stack
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 13
   i32.const 8624
   call $~lib/rt/__newArray
   local.tee $cache
   i32.store $0 offset=4
  end
  local.get $left
  local.get $right
  local.get $stack
  local.get $cache
  call $node_modules/@as-pect/assembly/assembly/internal/Reflect/Reflect.equals<~lib/string/String>
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $export:node_modules/@as-pect/assembly/assembly/internal/call/__call (param $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $node_modules/@as-pect/assembly/assembly/internal/call/__call
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
)
